/**
 * Graphical-based Robotics Programming Language
 * ( MainFrame class: Controller-View )
 * @author  Ali M. Al-Bayaty
 * @vesion  1.31
 * @since   3/18/2013
 * LICENSE: GNU General Public License v3.0 (http://www.gnu.org/licenses/gpl-3.0.html)
 */
package GRPL;

import java.awt.*;
import java.io.*;
import java.util.Scanner;
import javax.swing.*;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;

public class MainFrame extends javax.swing.JFrame
{
// ============================================================================
    /**
     * Creates new form MainFrame (Constructor)
     */
    public MainFrame() {
        initComponents();
        
        // Load/Parse the commands from the "instructions.guide" file:
        //System.out.println("The current working dir: " + System.getProperty("user.dir"));
        parser = new CmdsParser("instructions.guide", this);        
        ErrMsg = new ErrMsgClassifier(this);        
        // Declaring the initial icons:
        cmdIcon = emptyIcon = new ImageIcon(getClass().getResource("ICONS/Empty.jpg"));
        disabledIcon = new ImageIcon(getClass().getResource("ICONS/Disabled.jpg"));
        cmdName = cmdType = "";
        x = y = 0;
        selectPointer  = true;
        
        // Initializing the Workspace:
        Workspace = new JButton[][]{ { btn00, btn01, btn02, btn03, btn04, btn05, btn06 },
                                     { btn10, btn11, btn12, btn13, btn14, btn15, btn16 },
                                     { btn20, btn21, btn22, btn23, btn24, btn25, btn26 },
                                     { btn30, btn31, btn32, btn33, btn34, btn35, btn36 },
                                     { btn40, btn41, btn42, btn43, btn44, btn45, btn46 },
                                     { btn50, btn51, btn52, btn53, btn54, btn55, btn56 },
                                     { btn60, btn61, btn62, btn63, btn64, btn65, btn66 },
                                     { btn70, btn71, btn72, btn73, btn74, btn75, btn76 },
                                     { btn80, btn81, btn82, btn83, btn84, btn85, btn86 },
                                     { btn90, btn91, btn92, btn93, btn94, btn95, btn96 }
                                   };
        
        WorkspaceEnable = new boolean[10][7];        
        border = new Border[10][7];
        
        // Clearing all the Workspace's cells:        
        ClearAllLines();
    }
// ============================================================================
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveDialog = new javax.swing.JDialog();
        saveFile = new javax.swing.JFileChooser();
        openDialog = new javax.swing.JDialog();
        openFile = new javax.swing.JFileChooser();
        exportDialog = new javax.swing.JDialog();
        exportFile = new javax.swing.JFileChooser();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        CALL = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        STOP = new javax.swing.JButton();
        LOAD = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        CHECK = new javax.swing.JButton();
        LOOP = new javax.swing.JButton();
        BREAK = new javax.swing.JButton();
        CONTINUE = new javax.swing.JButton();
        FALSE = new javax.swing.JButton();
        TRUE = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        PICK = new javax.swing.JButton();
        DROP = new javax.swing.JButton();
        TOUCH = new javax.swing.JButton();
        SEE = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        FORWARD = new javax.swing.JButton();
        BACKWARD = new javax.swing.JButton();
        LEFT = new javax.swing.JButton();
        RIGHT = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        BLACK = new javax.swing.JButton();
        WHITE = new javax.swing.JButton();
        GREEN = new javax.swing.JButton();
        BLUE = new javax.swing.JButton();
        YELLOW = new javax.swing.JButton();
        RED = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Hundreds = new javax.swing.JSpinner();
        Tens = new javax.swing.JSpinner();
        Ones = new javax.swing.JSpinner();
        COMPOSE = new javax.swing.JButton();
        INFINITY = new javax.swing.JButton();
        SELECT = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        A = new javax.swing.JButton();
        B = new javax.swing.JButton();
        C = new javax.swing.JButton();
        D = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        ADD = new javax.swing.JButton();
        SUBTRACT = new javax.swing.JButton();
        MULTIPLY = new javax.swing.JButton();
        DIVIDE = new javax.swing.JButton();
        EQUAL = new javax.swing.JButton();
        NOTEQUAL = new javax.swing.JButton();
        GT = new javax.swing.JButton();
        GTE = new javax.swing.JButton();
        LT = new javax.swing.JButton();
        LTE = new javax.swing.JButton();
        MOD1 = new javax.swing.JButton();
        MOD2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Delete = new javax.swing.JButton();
        ClearLine = new javax.swing.JButton();
        ClearAll = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        WorkspacePanel = new javax.swing.JPanel();
        btn00 = new javax.swing.JButton();
        btn01 = new javax.swing.JButton();
        btn03 = new javax.swing.JButton();
        btn02 = new javax.swing.JButton();
        btn06 = new javax.swing.JButton();
        btn05 = new javax.swing.JButton();
        btn04 = new javax.swing.JButton();
        btn26 = new javax.swing.JButton();
        btn25 = new javax.swing.JButton();
        btn22 = new javax.swing.JButton();
        btn23 = new javax.swing.JButton();
        btn21 = new javax.swing.JButton();
        btn24 = new javax.swing.JButton();
        btn20 = new javax.swing.JButton();
        btn30 = new javax.swing.JButton();
        btn34 = new javax.swing.JButton();
        btn35 = new javax.swing.JButton();
        btn32 = new javax.swing.JButton();
        btn33 = new javax.swing.JButton();
        btn31 = new javax.swing.JButton();
        btn36 = new javax.swing.JButton();
        btn46 = new javax.swing.JButton();
        btn41 = new javax.swing.JButton();
        btn43 = new javax.swing.JButton();
        btn42 = new javax.swing.JButton();
        btn45 = new javax.swing.JButton();
        btn44 = new javax.swing.JButton();
        btn40 = new javax.swing.JButton();
        btn50 = new javax.swing.JButton();
        btn54 = new javax.swing.JButton();
        btn55 = new javax.swing.JButton();
        btn52 = new javax.swing.JButton();
        btn56 = new javax.swing.JButton();
        btn53 = new javax.swing.JButton();
        btn51 = new javax.swing.JButton();
        btn12 = new javax.swing.JButton();
        btn13 = new javax.swing.JButton();
        btn11 = new javax.swing.JButton();
        btn16 = new javax.swing.JButton();
        btn15 = new javax.swing.JButton();
        btn14 = new javax.swing.JButton();
        btn10 = new javax.swing.JButton();
        btn62 = new javax.swing.JButton();
        btn63 = new javax.swing.JButton();
        btn61 = new javax.swing.JButton();
        btn66 = new javax.swing.JButton();
        btn65 = new javax.swing.JButton();
        btn64 = new javax.swing.JButton();
        btn60 = new javax.swing.JButton();
        btn72 = new javax.swing.JButton();
        btn73 = new javax.swing.JButton();
        btn71 = new javax.swing.JButton();
        btn76 = new javax.swing.JButton();
        btn75 = new javax.swing.JButton();
        btn74 = new javax.swing.JButton();
        btn70 = new javax.swing.JButton();
        btn82 = new javax.swing.JButton();
        btn83 = new javax.swing.JButton();
        btn81 = new javax.swing.JButton();
        btn86 = new javax.swing.JButton();
        btn85 = new javax.swing.JButton();
        btn84 = new javax.swing.JButton();
        btn80 = new javax.swing.JButton();
        btn92 = new javax.swing.JButton();
        btn93 = new javax.swing.JButton();
        btn91 = new javax.swing.JButton();
        btn96 = new javax.swing.JButton();
        btn95 = new javax.swing.JButton();
        btn94 = new javax.swing.JButton();
        btn90 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        UNDO = new javax.swing.JButton();
        REDO = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        SELECTION = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        Coordinates = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Save = new javax.swing.JMenuItem();
        Load = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        Export = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        Exit = new javax.swing.JMenuItem();
        Actions = new javax.swing.JMenu();
        deleteONE = new javax.swing.JMenuItem();
        deleteLINE = new javax.swing.JMenuItem();
        deleteALL = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        undoAction = new javax.swing.JMenuItem();
        redoAction = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        About = new javax.swing.JMenuItem();

        saveDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        saveDialog.setTitle("Save a file ...");
        saveDialog.setAlwaysOnTop(true);

        saveFile.setAcceptAllFileFilterUsed(false);
        saveFile.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        saveFile.setCurrentDirectory(new java.io.File("C:\\"));
            saveFile.setDialogTitle("Save a file ...");

            javax.swing.GroupLayout saveDialogLayout = new javax.swing.GroupLayout(saveDialog.getContentPane());
            saveDialog.getContentPane().setLayout(saveDialogLayout);
            saveDialogLayout.setHorizontalGroup(
                saveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, saveDialogLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
            );
            saveDialogLayout.setVerticalGroup(
                saveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(saveDialogLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(saveFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            openDialog.setTitle("Open a file ...");
            openDialog.setAlwaysOnTop(true);

            openFile.setAcceptAllFileFilterUsed(false);
            openFile.setCurrentDirectory(new java.io.File("C:\\"));
                openFile.setDialogTitle("Open a file ...");

                javax.swing.GroupLayout openDialogLayout = new javax.swing.GroupLayout(openDialog.getContentPane());
                openDialog.getContentPane().setLayout(openDialogLayout);
                openDialogLayout.setHorizontalGroup(
                    openDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, openDialogLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(openFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                );
                openDialogLayout.setVerticalGroup(
                    openDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, openDialogLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(openFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                );

                exportFile.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
                exportFile.setApproveButtonText("Export");
                exportFile.setCurrentDirectory(new java.io.File("C:\\"));
                    exportFile.setDialogTitle("Export a file ...");

                    javax.swing.GroupLayout exportDialogLayout = new javax.swing.GroupLayout(exportDialog.getContentPane());
                    exportDialog.getContentPane().setLayout(exportDialogLayout);
                    exportDialogLayout.setHorizontalGroup(
                        exportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(exportDialogLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(exportFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    );
                    exportDialogLayout.setVerticalGroup(
                        exportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(exportDialogLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(exportFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    );

                    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
                    setTitle("The GRPL Tool ...");
                    setBounds(new java.awt.Rectangle(20, 20, 0, 0));
                    setName("frame1"); // NOI18N
                    setResizable(false);

                    jLabel4.setText("Tool Box:");

                    jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
                    jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

                    jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                    CALL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/OPERATIONS/Run.png"))); // NOI18N
                    CALL.setToolTipText("Call a module");
                    CALL.setActionCommand("RUN");
                    CALL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    CALL.setMaximumSize(new java.awt.Dimension(40, 40));
                    CALL.setMinimumSize(new java.awt.Dimension(40, 40));
                    CALL.setName(""); // NOI18N
                    CALL.setPreferredSize(new java.awt.Dimension(60, 40));
                    CALL.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            CALLActionPerformed(evt);
                        }
                    });

                    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
                    jLabel1.setText("Operaions / Modules:");

                    STOP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/OPERATIONS/Stop.png"))); // NOI18N
                    STOP.setToolTipText("End of the Loop, Check, Module");
                    STOP.setActionCommand("STOP");
                    STOP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    STOP.setMaximumSize(new java.awt.Dimension(40, 40));
                    STOP.setMinimumSize(new java.awt.Dimension(40, 40));
                    STOP.setPreferredSize(new java.awt.Dimension(60, 40));
                    STOP.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            STOPActionPerformed(evt);
                        }
                    });

                    LOAD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/OPERATIONS/Load.png"))); // NOI18N
                    LOAD.setToolTipText("Assign value to a variable");
                    LOAD.setActionCommand("LOAD");
                    LOAD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    LOAD.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            LOADActionPerformed(evt);
                        }
                    });

                    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
                    jLabel2.setText("Flow Controls:");

                    CHECK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/CONTROLS/Check.png"))); // NOI18N
                    CHECK.setToolTipText("Check (Inspection)");
                    CHECK.setActionCommand("CHECK");
                    CHECK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    CHECK.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            CHECKActionPerformed(evt);
                        }
                    });

                    LOOP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/CONTROLS/Loop.png"))); // NOI18N
                    LOOP.setToolTipText("Loop (Iterations)");
                    LOOP.setActionCommand("LOOP");
                    LOOP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    LOOP.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            LOOPActionPerformed(evt);
                        }
                    });

                    BREAK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/CONTROLS/Break.png"))); // NOI18N
                    BREAK.setToolTipText("Break (exit the iterations)");
                    BREAK.setActionCommand("BREAK");
                    BREAK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    BREAK.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BREAKActionPerformed(evt);
                        }
                    });

                    CONTINUE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/CONTROLS/Continue.png"))); // NOI18N
                    CONTINUE.setToolTipText("Continue (skip the current iteration)");
                    CONTINUE.setActionCommand("CONTINUE");
                    CONTINUE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    CONTINUE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            CONTINUEActionPerformed(evt);
                        }
                    });

                    FALSE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/CONTROLS/False.jpg"))); // NOI18N
                    FALSE.setToolTipText("False flag");
                    FALSE.setActionCommand("FALSE");
                    FALSE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    FALSE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            FALSEActionPerformed(evt);
                        }
                    });

                    TRUE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/CONTROLS/True.jpg"))); // NOI18N
                    TRUE.setToolTipText("True flag");
                    TRUE.setActionCommand("TRUE");
                    TRUE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    TRUE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            TRUEActionPerformed(evt);
                        }
                    });

                    jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
                    jLabel3.setText("Actuators / Sensors:");

                    PICK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Sensors/Pick.jpg"))); // NOI18N
                    PICK.setToolTipText("Pick an object");
                    PICK.setActionCommand("PICK");
                    PICK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    PICK.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            PICKActionPerformed(evt);
                        }
                    });

                    DROP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Sensors/Drop.jpg"))); // NOI18N
                    DROP.setToolTipText("Drop an object");
                    DROP.setActionCommand("DROP");
                    DROP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    DROP.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DROPActionPerformed(evt);
                        }
                    });

                    TOUCH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Sensors/Touch.jpg"))); // NOI18N
                    TOUCH.setToolTipText("Touch an object");
                    TOUCH.setActionCommand("TOUCH");
                    TOUCH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    TOUCH.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            TOUCHActionPerformed(evt);
                        }
                    });

                    SEE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Sensors/See.png"))); // NOI18N
                    SEE.setToolTipText("See colors ");
                    SEE.setActionCommand("SEE");
                    SEE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    SEE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SEEActionPerformed(evt);
                        }
                    });

                    jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
                    jLabel6.setText("Directions:");

                    FORWARD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Directions/Up.jpg"))); // NOI18N
                    FORWARD.setToolTipText("Forward movement");
                    FORWARD.setActionCommand("FORWARD");
                    FORWARD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    FORWARD.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            FORWARDActionPerformed(evt);
                        }
                    });

                    BACKWARD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Directions/Down.jpg"))); // NOI18N
                    BACKWARD.setToolTipText("Backward movement");
                    BACKWARD.setActionCommand("BACKWARD");
                    BACKWARD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    BACKWARD.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BACKWARDActionPerformed(evt);
                        }
                    });

                    LEFT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Directions/Left.jpg"))); // NOI18N
                    LEFT.setToolTipText("Turn Left, 90 degrees");
                    LEFT.setActionCommand("LEFT");
                    LEFT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    LEFT.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            LEFTActionPerformed(evt);
                        }
                    });

                    RIGHT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Directions/Right.jpg"))); // NOI18N
                    RIGHT.setToolTipText("Turn Right, 90 degrees");
                    RIGHT.setActionCommand("RIGHT");
                    RIGHT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    RIGHT.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            RIGHTActionPerformed(evt);
                        }
                    });

                    jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
                    jLabel7.setText("Colors:");

                    BLACK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Colors/Black.png"))); // NOI18N
                    BLACK.setToolTipText("Black color");
                    BLACK.setActionCommand("BLACK");
                    BLACK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    BLACK.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BLACKActionPerformed(evt);
                        }
                    });

                    WHITE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Colors/White.png"))); // NOI18N
                    WHITE.setToolTipText("White color");
                    WHITE.setActionCommand("WHITE");
                    WHITE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    WHITE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            WHITEActionPerformed(evt);
                        }
                    });

                    GREEN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Colors/Green.png"))); // NOI18N
                    GREEN.setToolTipText("Green color");
                    GREEN.setActionCommand("GREEN");
                    GREEN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    GREEN.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            GREENActionPerformed(evt);
                        }
                    });

                    BLUE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Colors/Blue.png"))); // NOI18N
                    BLUE.setToolTipText("Blue color");
                    BLUE.setActionCommand("BLUE");
                    BLUE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    BLUE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BLUEActionPerformed(evt);
                        }
                    });

                    YELLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Colors/Yellow.png"))); // NOI18N
                    YELLOW.setToolTipText("Yellow color");
                    YELLOW.setActionCommand("YELLOW");
                    YELLOW.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    YELLOW.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            YELLOWActionPerformed(evt);
                        }
                    });

                    RED.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Colors/Red.png"))); // NOI18N
                    RED.setToolTipText("Red color");
                    RED.setActionCommand("RED");
                    RED.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    RED.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            REDActionPerformed(evt);
                        }
                    });

                    jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
                    jLabel8.setText("Numbers:");

                    Hundreds.setModel(new javax.swing.SpinnerNumberModel(Byte.valueOf((byte)0), Byte.valueOf((byte)0), Byte.valueOf((byte)9), Byte.valueOf((byte)1)));
                    Hundreds.setToolTipText("Hundreds");

                    Tens.setModel(new javax.swing.SpinnerNumberModel(Byte.valueOf((byte)0), Byte.valueOf((byte)0), Byte.valueOf((byte)9), Byte.valueOf((byte)1)));
                    Tens.setToolTipText("Tens");

                    Ones.setModel(new javax.swing.SpinnerNumberModel(Byte.valueOf((byte)0), Byte.valueOf((byte)0), Byte.valueOf((byte)9), Byte.valueOf((byte)1)));
                    Ones.setToolTipText("Ones");

                    COMPOSE.setText("Compose");
                    COMPOSE.setToolTipText("Format a number");
                    COMPOSE.setActionCommand("COMPOSE");
                    COMPOSE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    COMPOSE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            COMPOSEActionPerformed(evt);
                        }
                    });

                    INFINITY.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/infinity.jpg"))); // NOI18N
                    INFINITY.setToolTipText("Infinity");
                    INFINITY.setActionCommand("INFINITY");
                    INFINITY.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    INFINITY.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            INFINITYActionPerformed(evt);
                        }
                    });

                    SELECT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/OPERATIONS/Select.jpg"))); // NOI18N
                    SELECT.setToolTipText("Select a command to perfom action(s)");
                    SELECT.setActionCommand("SELECT");
                    SELECT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    SELECT.setMaximumSize(new java.awt.Dimension(40, 40));
                    SELECT.setMinimumSize(new java.awt.Dimension(40, 40));
                    SELECT.setName(""); // NOI18N
                    SELECT.setPreferredSize(new java.awt.Dimension(60, 40));
                    SELECT.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SELECTActionPerformed(evt);
                        }
                    });

                    jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
                    jLabel9.setText("Variables:");

                    A.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Variables/A.jpg"))); // NOI18N
                    A.setToolTipText("Variable A");
                    A.setActionCommand("A");
                    A.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    A.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AActionPerformed(evt);
                        }
                    });

                    B.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Variables/B.jpg"))); // NOI18N
                    B.setToolTipText("Variable B");
                    B.setActionCommand("B");
                    B.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    B.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BActionPerformed(evt);
                        }
                    });

                    C.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Variables/C.jpg"))); // NOI18N
                    C.setToolTipText("Variable C");
                    C.setActionCommand("C");
                    C.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    C.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            CActionPerformed(evt);
                        }
                    });

                    D.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Variables/D.jpg"))); // NOI18N
                    D.setToolTipText("Variable D");
                    D.setActionCommand("D");
                    D.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    D.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DActionPerformed(evt);
                        }
                    });

                    jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
                    jLabel10.setText("Math / Logic:");

                    ADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/Add.jpg"))); // NOI18N
                    ADD.setToolTipText("Add");
                    ADD.setActionCommand("ADD");
                    ADD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    ADD.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ADDActionPerformed(evt);
                        }
                    });

                    SUBTRACT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/Subtract.jpg"))); // NOI18N
                    SUBTRACT.setToolTipText("Subtract");
                    SUBTRACT.setActionCommand("SUBTRACT");
                    SUBTRACT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    SUBTRACT.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SUBTRACTActionPerformed(evt);
                        }
                    });

                    MULTIPLY.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/Multiply.jpg"))); // NOI18N
                    MULTIPLY.setToolTipText("Multiply");
                    MULTIPLY.setActionCommand("MULTIPLY");
                    MULTIPLY.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    MULTIPLY.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MULTIPLYActionPerformed(evt);
                        }
                    });

                    DIVIDE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/Divide.jpg"))); // NOI18N
                    DIVIDE.setToolTipText("Divide");
                    DIVIDE.setActionCommand("DIVIDE");
                    DIVIDE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    DIVIDE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DIVIDEActionPerformed(evt);
                        }
                    });

                    EQUAL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/Equal.jpg"))); // NOI18N
                    EQUAL.setToolTipText("Equal");
                    EQUAL.setActionCommand("EQUAL");
                    EQUAL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    EQUAL.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EQUALActionPerformed(evt);
                        }
                    });

                    NOTEQUAL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/Not Equal.jpg"))); // NOI18N
                    NOTEQUAL.setToolTipText("Not equal");
                    NOTEQUAL.setActionCommand("NOTEQUAL");
                    NOTEQUAL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    NOTEQUAL.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            NOTEQUALActionPerformed(evt);
                        }
                    });

                    GT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/GT.jpg"))); // NOI18N
                    GT.setToolTipText("Greater than");
                    GT.setActionCommand("GT");
                    GT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    GT.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            GTActionPerformed(evt);
                        }
                    });

                    GTE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/GTE.jpg"))); // NOI18N
                    GTE.setToolTipText("Greater than and equal");
                    GTE.setActionCommand("GTE");
                    GTE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    GTE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            GTEActionPerformed(evt);
                        }
                    });

                    LT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/LT.jpg"))); // NOI18N
                    LT.setToolTipText("Less than");
                    LT.setActionCommand("LT");
                    LT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    LT.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            LTActionPerformed(evt);
                        }
                    });

                    LTE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Math/LTE.jpg"))); // NOI18N
                    LTE.setToolTipText("Less than and equal");
                    LTE.setActionCommand("LTE");
                    LTE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    LTE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            LTEActionPerformed(evt);
                        }
                    });

                    MOD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/OPERATIONS/Mod1.jpg"))); // NOI18N
                    MOD1.setToolTipText("Module 1");
                    MOD1.setActionCommand("FUNC1");
                    MOD1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    MOD1.setMaximumSize(new java.awt.Dimension(40, 40));
                    MOD1.setMinimumSize(new java.awt.Dimension(40, 40));
                    MOD1.setName(""); // NOI18N
                    MOD1.setPreferredSize(new java.awt.Dimension(60, 40));
                    MOD1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MOD1ActionPerformed(evt);
                        }
                    });

                    MOD2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/OPERATIONS/Mod2.jpg"))); // NOI18N
                    MOD2.setToolTipText("Module 2");
                    MOD2.setActionCommand("FUNC2");
                    MOD2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    MOD2.setMaximumSize(new java.awt.Dimension(40, 40));
                    MOD2.setMinimumSize(new java.awt.Dimension(40, 40));
                    MOD2.setPreferredSize(new java.awt.Dimension(60, 40));
                    MOD2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MOD2ActionPerformed(evt);
                        }
                    });

                    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                    jPanel1.setLayout(jPanel1Layout);
                    jPanel1Layout.setHorizontalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(SELECT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(CALL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PICK, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(TOUCH, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(FORWARD, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(LEFT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(LOAD, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(STOP, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(DROP, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(SEE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(BACKWARD, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(RIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(0, 0, Short.MAX_VALUE))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(CHECK, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(BREAK, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(FALSE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(LOOP, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(CONTINUE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(TRUE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(ADD, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(SUBTRACT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(MOD1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(MOD2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(COMPOSE, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(INFINITY, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel9)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(MULTIPLY, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(DIVIDE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(EQUAL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(NOTEQUAL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(GT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(GTE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(BLACK, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(WHITE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(LT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(LTE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addContainerGap(19, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(Hundreds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Tens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Ones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel7)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(GREEN, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(BLUE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(YELLOW, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(RED, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(0, 0, Short.MAX_VALUE))))
                    );
                    jPanel1Layout.setVerticalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(SELECT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LOAD, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CALL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(STOP, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(MOD1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(MOD2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CHECK, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LOOP, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(BREAK, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CONTINUE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(FALSE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TRUE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PICK, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DROP, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(TOUCH, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SEE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(FORWARD, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BACKWARD, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(LEFT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(RIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ADD, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SUBTRACT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(MULTIPLY, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DIVIDE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(EQUAL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(NOTEQUAL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(GT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(GTE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(LT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(INFINITY, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Hundreds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Tens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Ones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(LTE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(COMPOSE, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(BLACK, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(WHITE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(GREEN, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BLUE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(RED, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(YELLOW, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(19, Short.MAX_VALUE))
                    );

                    jScrollPane1.setViewportView(jPanel1);

                    jLabel5.setText("Workspace:");

                    Delete.setText("Clear (One)");
                    Delete.setToolTipText("Remove a single command");
                    Delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    Delete.setEnabled(false);
                    Delete.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteActionPerformed(evt);
                        }
                    });

                    ClearLine.setText("Clear (Line)");
                    ClearLine.setToolTipText("Remove a line of commands");
                    ClearLine.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    ClearLine.setEnabled(false);
                    ClearLine.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ClearLineActionPerformed(evt);
                        }
                    });

                    ClearAll.setText("Clear (ALL)");
                    ClearAll.setToolTipText("Remove all lines of commands");
                    ClearAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    ClearAll.setEnabled(false);
                    ClearAll.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ClearAllActionPerformed(evt);
                        }
                    });

                    WorkspacePanel.setPreferredSize(new java.awt.Dimension(497, 797));

                    btn00.setBackground(new java.awt.Color(255, 255, 255));
                    btn00.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn00.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn00.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn00ActionPerformed(evt);
                        }
                    });

                    btn01.setBackground(new java.awt.Color(255, 255, 255));
                    btn01.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn01.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn01.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn01ActionPerformed(evt);
                        }
                    });

                    btn03.setBackground(new java.awt.Color(255, 255, 255));
                    btn03.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn03.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn03.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn03ActionPerformed(evt);
                        }
                    });

                    btn02.setBackground(new java.awt.Color(255, 255, 255));
                    btn02.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn02.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn02.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn02ActionPerformed(evt);
                        }
                    });

                    btn06.setBackground(new java.awt.Color(255, 255, 255));
                    btn06.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn06.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn06.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn06ActionPerformed(evt);
                        }
                    });

                    btn05.setBackground(new java.awt.Color(255, 255, 255));
                    btn05.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn05.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn05.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn05ActionPerformed(evt);
                        }
                    });

                    btn04.setBackground(new java.awt.Color(255, 255, 255));
                    btn04.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn04.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn04.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn04ActionPerformed(evt);
                        }
                    });

                    btn26.setBackground(new java.awt.Color(255, 255, 255));
                    btn26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn26.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn26.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn26ActionPerformed(evt);
                        }
                    });

                    btn25.setBackground(new java.awt.Color(255, 255, 255));
                    btn25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn25.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn25.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn25ActionPerformed(evt);
                        }
                    });

                    btn22.setBackground(new java.awt.Color(255, 255, 255));
                    btn22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn22.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn22.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn22ActionPerformed(evt);
                        }
                    });

                    btn23.setBackground(new java.awt.Color(255, 255, 255));
                    btn23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn23.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn23.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn23ActionPerformed(evt);
                        }
                    });

                    btn21.setBackground(new java.awt.Color(255, 255, 255));
                    btn21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn21.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn21.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn21ActionPerformed(evt);
                        }
                    });

                    btn24.setBackground(new java.awt.Color(255, 255, 255));
                    btn24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn24.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn24.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn24ActionPerformed(evt);
                        }
                    });

                    btn20.setBackground(new java.awt.Color(255, 255, 255));
                    btn20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn20.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn20ActionPerformed(evt);
                        }
                    });

                    btn30.setBackground(new java.awt.Color(255, 255, 255));
                    btn30.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn30.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn30.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn30ActionPerformed(evt);
                        }
                    });

                    btn34.setBackground(new java.awt.Color(255, 255, 255));
                    btn34.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn34.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn34.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn34ActionPerformed(evt);
                        }
                    });

                    btn35.setBackground(new java.awt.Color(255, 255, 255));
                    btn35.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn35.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn35.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn35ActionPerformed(evt);
                        }
                    });

                    btn32.setBackground(new java.awt.Color(255, 255, 255));
                    btn32.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn32.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn32.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn32ActionPerformed(evt);
                        }
                    });

                    btn33.setBackground(new java.awt.Color(255, 255, 255));
                    btn33.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn33.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn33.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn33ActionPerformed(evt);
                        }
                    });

                    btn31.setBackground(new java.awt.Color(255, 255, 255));
                    btn31.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn31.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn31.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn31ActionPerformed(evt);
                        }
                    });

                    btn36.setBackground(new java.awt.Color(255, 255, 255));
                    btn36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn36.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn36.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn36ActionPerformed(evt);
                        }
                    });

                    btn46.setBackground(new java.awt.Color(255, 255, 255));
                    btn46.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn46.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn46.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn46ActionPerformed(evt);
                        }
                    });

                    btn41.setBackground(new java.awt.Color(255, 255, 255));
                    btn41.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn41.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn41.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn41ActionPerformed(evt);
                        }
                    });

                    btn43.setBackground(new java.awt.Color(255, 255, 255));
                    btn43.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn43.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn43.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn43ActionPerformed(evt);
                        }
                    });

                    btn42.setBackground(new java.awt.Color(255, 255, 255));
                    btn42.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn42.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn42.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn42ActionPerformed(evt);
                        }
                    });

                    btn45.setBackground(new java.awt.Color(255, 255, 255));
                    btn45.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn45.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn45.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn45ActionPerformed(evt);
                        }
                    });

                    btn44.setBackground(new java.awt.Color(255, 255, 255));
                    btn44.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn44.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn44.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn44ActionPerformed(evt);
                        }
                    });

                    btn40.setBackground(new java.awt.Color(255, 255, 255));
                    btn40.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn40.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn40.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn40ActionPerformed(evt);
                        }
                    });

                    btn50.setBackground(new java.awt.Color(255, 255, 255));
                    btn50.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn50.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn50.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn50ActionPerformed(evt);
                        }
                    });

                    btn54.setBackground(new java.awt.Color(255, 255, 255));
                    btn54.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn54.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn54.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn54ActionPerformed(evt);
                        }
                    });

                    btn55.setBackground(new java.awt.Color(255, 255, 255));
                    btn55.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn55.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn55.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn55ActionPerformed(evt);
                        }
                    });

                    btn52.setBackground(new java.awt.Color(255, 255, 255));
                    btn52.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn52.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn52.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn52ActionPerformed(evt);
                        }
                    });

                    btn56.setBackground(new java.awt.Color(255, 255, 255));
                    btn56.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn56.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn56.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn56ActionPerformed(evt);
                        }
                    });

                    btn53.setBackground(new java.awt.Color(255, 255, 255));
                    btn53.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn53.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn53.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn53ActionPerformed(evt);
                        }
                    });

                    btn51.setBackground(new java.awt.Color(255, 255, 255));
                    btn51.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn51.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn51.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn51ActionPerformed(evt);
                        }
                    });

                    btn12.setBackground(new java.awt.Color(255, 255, 255));
                    btn12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn12.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn12ActionPerformed(evt);
                        }
                    });

                    btn13.setBackground(new java.awt.Color(255, 255, 255));
                    btn13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn13.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn13ActionPerformed(evt);
                        }
                    });

                    btn11.setBackground(new java.awt.Color(255, 255, 255));
                    btn11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn11.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn11ActionPerformed(evt);
                        }
                    });

                    btn16.setBackground(new java.awt.Color(255, 255, 255));
                    btn16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn16.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn16ActionPerformed(evt);
                        }
                    });

                    btn15.setBackground(new java.awt.Color(255, 255, 255));
                    btn15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn15.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn15ActionPerformed(evt);
                        }
                    });

                    btn14.setBackground(new java.awt.Color(255, 255, 255));
                    btn14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn14.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn14ActionPerformed(evt);
                        }
                    });

                    btn10.setBackground(new java.awt.Color(255, 255, 255));
                    btn10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn10.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn10ActionPerformed(evt);
                        }
                    });

                    btn62.setBackground(new java.awt.Color(255, 255, 255));
                    btn62.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn62.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn62.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn62ActionPerformed(evt);
                        }
                    });

                    btn63.setBackground(new java.awt.Color(255, 255, 255));
                    btn63.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn63.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn63.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn63ActionPerformed(evt);
                        }
                    });

                    btn61.setBackground(new java.awt.Color(255, 255, 255));
                    btn61.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn61.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn61.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn61ActionPerformed(evt);
                        }
                    });

                    btn66.setBackground(new java.awt.Color(255, 255, 255));
                    btn66.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn66.setToolTipText("");
                    btn66.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn66.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn66ActionPerformed(evt);
                        }
                    });

                    btn65.setBackground(new java.awt.Color(255, 255, 255));
                    btn65.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn65.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn65.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn65ActionPerformed(evt);
                        }
                    });

                    btn64.setBackground(new java.awt.Color(255, 255, 255));
                    btn64.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn64.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn64.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn64ActionPerformed(evt);
                        }
                    });

                    btn60.setBackground(new java.awt.Color(255, 255, 255));
                    btn60.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn60.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn60.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn60ActionPerformed(evt);
                        }
                    });

                    btn72.setBackground(new java.awt.Color(255, 255, 255));
                    btn72.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn72.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn72.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn72ActionPerformed(evt);
                        }
                    });

                    btn73.setBackground(new java.awt.Color(255, 255, 255));
                    btn73.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn73.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn73.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn73ActionPerformed(evt);
                        }
                    });

                    btn71.setBackground(new java.awt.Color(255, 255, 255));
                    btn71.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn71.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn71.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn71ActionPerformed(evt);
                        }
                    });

                    btn76.setBackground(new java.awt.Color(255, 255, 255));
                    btn76.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn76.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn76.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn76ActionPerformed(evt);
                        }
                    });

                    btn75.setBackground(new java.awt.Color(255, 255, 255));
                    btn75.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn75.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn75.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn75ActionPerformed(evt);
                        }
                    });

                    btn74.setBackground(new java.awt.Color(255, 255, 255));
                    btn74.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn74.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn74.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn74ActionPerformed(evt);
                        }
                    });

                    btn70.setBackground(new java.awt.Color(255, 255, 255));
                    btn70.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn70.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn70.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn70ActionPerformed(evt);
                        }
                    });

                    btn82.setBackground(new java.awt.Color(255, 255, 255));
                    btn82.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn82.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn82.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn82ActionPerformed(evt);
                        }
                    });

                    btn83.setBackground(new java.awt.Color(255, 255, 255));
                    btn83.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn83.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn83.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn83ActionPerformed(evt);
                        }
                    });

                    btn81.setBackground(new java.awt.Color(255, 255, 255));
                    btn81.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn81.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn81.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn81ActionPerformed(evt);
                        }
                    });

                    btn86.setBackground(new java.awt.Color(255, 255, 255));
                    btn86.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn86.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn86.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn86ActionPerformed(evt);
                        }
                    });

                    btn85.setBackground(new java.awt.Color(255, 255, 255));
                    btn85.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn85.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn85.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn85ActionPerformed(evt);
                        }
                    });

                    btn84.setBackground(new java.awt.Color(255, 255, 255));
                    btn84.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn84.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn84.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn84ActionPerformed(evt);
                        }
                    });

                    btn80.setBackground(new java.awt.Color(255, 255, 255));
                    btn80.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn80.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn80.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn80ActionPerformed(evt);
                        }
                    });

                    btn92.setBackground(new java.awt.Color(255, 255, 255));
                    btn92.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn92.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn92.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn92ActionPerformed(evt);
                        }
                    });

                    btn93.setBackground(new java.awt.Color(255, 255, 255));
                    btn93.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn93.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn93.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn93ActionPerformed(evt);
                        }
                    });

                    btn91.setBackground(new java.awt.Color(255, 255, 255));
                    btn91.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn91.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn91.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn91ActionPerformed(evt);
                        }
                    });

                    btn96.setBackground(new java.awt.Color(255, 255, 255));
                    btn96.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn96.setToolTipText("Powered by AMJB, 2014 ...");
                    btn96.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn96.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn96ActionPerformed(evt);
                        }
                    });

                    btn95.setBackground(new java.awt.Color(255, 255, 255));
                    btn95.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn95.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn95.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn95ActionPerformed(evt);
                        }
                    });

                    btn94.setBackground(new java.awt.Color(255, 255, 255));
                    btn94.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn94.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn94.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn94ActionPerformed(evt);
                        }
                    });

                    btn90.setBackground(new java.awt.Color(255, 255, 255));
                    btn90.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    btn90.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    btn90.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            btn90ActionPerformed(evt);
                        }
                    });

                    jLabel13.setText("0");

                    jLabel14.setText("1");

                    jLabel15.setText("2");

                    jLabel16.setText("3");

                    jLabel17.setText("4");

                    jLabel18.setText("5");

                    jLabel19.setText("6");

                    jLabel20.setText("0");

                    jLabel21.setText("1");

                    jLabel22.setText("2");

                    jLabel23.setText("3");

                    jLabel24.setText("4");

                    jLabel25.setText("5");

                    jLabel26.setText("6");

                    jLabel27.setText("7");

                    jLabel28.setText("8");

                    jLabel29.setText("9");

                    javax.swing.GroupLayout WorkspacePanelLayout = new javax.swing.GroupLayout(WorkspacePanel);
                    WorkspacePanel.setLayout(WorkspacePanelLayout);
                    WorkspacePanelLayout.setHorizontalGroup(
                        WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(WorkspacePanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel20)
                                .addComponent(jLabel21)
                                .addComponent(jLabel22)
                                .addComponent(jLabel23)
                                .addComponent(jLabel24)
                                .addComponent(jLabel25)
                                .addComponent(jLabel26)
                                .addComponent(jLabel27)
                                .addComponent(jLabel28)
                                .addComponent(jLabel29))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(WorkspacePanelLayout.createSequentialGroup()
                                    .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(jLabel13)
                                        .addComponent(btn00, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(jLabel14)
                                        .addComponent(btn01, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(jLabel15)
                                        .addComponent(btn02, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(jLabel16)
                                        .addComponent(btn03, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(jLabel17)
                                        .addComponent(btn04, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(jLabel18)
                                        .addComponent(btn05, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(jLabel19)
                                        .addComponent(btn06, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(WorkspacePanelLayout.createSequentialGroup()
                                    .addComponent(btn20, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn21, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn22, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn23, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn24, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn25, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn26, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(WorkspacePanelLayout.createSequentialGroup()
                                    .addComponent(btn30, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn31, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn32, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn33, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn34, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn35, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn36, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(WorkspacePanelLayout.createSequentialGroup()
                                    .addComponent(btn40, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn41, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn42, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn43, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn44, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn45, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn46, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(WorkspacePanelLayout.createSequentialGroup()
                                    .addComponent(btn50, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn51, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn52, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn53, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn54, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn55, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn56, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(WorkspacePanelLayout.createSequentialGroup()
                                    .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn11, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn12, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn13, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn14, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn15, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn16, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(WorkspacePanelLayout.createSequentialGroup()
                                    .addComponent(btn60, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn61, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn62, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn63, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn64, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn65, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn66, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(WorkspacePanelLayout.createSequentialGroup()
                                    .addComponent(btn70, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn71, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn72, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn73, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn74, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn75, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn76, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(WorkspacePanelLayout.createSequentialGroup()
                                    .addComponent(btn80, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn81, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn82, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn83, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn84, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn85, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn86, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(WorkspacePanelLayout.createSequentialGroup()
                                    .addComponent(btn90, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn91, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn92, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn93, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn94, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn95, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btn96, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(27, 27, 27))
                    );
                    WorkspacePanelLayout.setVerticalGroup(
                        WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(WorkspacePanelLayout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel19)
                                .addComponent(jLabel18)
                                .addComponent(jLabel17)
                                .addComponent(jLabel16)
                                .addComponent(jLabel15)
                                .addComponent(jLabel14)
                                .addComponent(jLabel13))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel20)
                                .addComponent(btn00, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn01, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn02, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn03, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn04, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn05, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn06, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel21)
                                .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn11, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn12, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn13, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn14, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn15, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn16, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel22)
                                .addComponent(btn20, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn21, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn22, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn23, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn24, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn25, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn26, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel23)
                                .addComponent(btn30, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn31, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn32, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn33, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn34, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn35, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn36, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(btn41, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn43, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn46, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel24)
                                .addComponent(btn40, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn44, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn42, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn45, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(btn51, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn53, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn56, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel25)
                                .addComponent(btn52, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn55, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn54, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn50, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(btn60, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn65, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn64, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn66, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn61, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn63, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn62, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26))
                            .addGap(18, 18, 18)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(btn76, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn75, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn73, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn71, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn72, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn74, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn70, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27))
                            .addGap(18, 18, 18)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(btn84, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn80, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn83, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn81, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn86, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn85, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn82, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28))
                            .addGap(18, 18, 18)
                            .addGroup(WorkspacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel29)
                                .addComponent(btn92, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn93, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn91, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn94, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn90, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn95, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn96, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(51, Short.MAX_VALUE))
                    );

                    jScrollPane2.setViewportView(WorkspacePanel);

                    UNDO.setText("Undo");
                    UNDO.setToolTipText("Undo the previous activities");
                    UNDO.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    UNDO.setEnabled(false);
                    UNDO.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            UNDOActionPerformed(evt);
                        }
                    });

                    REDO.setText("Redo");
                    REDO.setToolTipText("Redo the recent activities");
                    REDO.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    REDO.setEnabled(false);
                    REDO.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            REDOActionPerformed(evt);
                        }
                    });

                    jLabel11.setText("Current selection");

                    SELECTION.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GRPL/ICONS/Empty.jpg"))); // NOI18N
                    SELECTION.setToolTipText("The current selected command from the Tool Box palette");
                    SELECTION.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                    SELECTION.setFocusPainted(false);
                    SELECTION.setFocusable(false);
                    SELECTION.setMaximumSize(new java.awt.Dimension(40, 40));
                    SELECTION.setMinimumSize(new java.awt.Dimension(40, 40));
                    SELECTION.setName(""); // NOI18N
                    SELECTION.setPreferredSize(new java.awt.Dimension(60, 40));
                    SELECTION.setRequestFocusEnabled(false);
                    SELECTION.setRolloverEnabled(false);

                    jLabel12.setText("Actions");

                    jLabel30.setText("Current position");
                    jLabel30.setToolTipText("The current selected place in the Workspace palette");

                    Coordinates.setText("Row:   , Col: ");

                    File.setText("File");

                    Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
                    Save.setText("Save");
                    Save.setToolTipText("Save the workspace to a file");
                    Save.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SaveActionPerformed(evt);
                        }
                    });
                    File.add(Save);

                    Load.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
                    Load.setText("Load");
                    Load.setToolTipText("Load the workspace from a file");
                    Load.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            LoadActionPerformed(evt);
                        }
                    });
                    File.add(Load);
                    File.add(jSeparator2);

                    Export.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
                    Export.setText("Export");
                    Export.setToolTipText("Export the workspace to the RoboMind simulator");
                    Export.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExportActionPerformed(evt);
                        }
                    });
                    File.add(Export);
                    File.add(jSeparator1);

                    Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
                    Exit.setText("Exit");
                    Exit.setToolTipText("Quit the GRPL Tool ...");
                    Exit.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitActionPerformed(evt);
                        }
                    });
                    File.add(Exit);

                    jMenuBar1.add(File);

                    Actions.setText("Actions");

                    deleteONE.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_MASK));
                    deleteONE.setText("Clear (ONE)");
                    deleteONE.setToolTipText("Remove a single command");
                    deleteONE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            deleteONEActionPerformed(evt);
                        }
                    });
                    Actions.add(deleteONE);

                    deleteLINE.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_MASK));
                    deleteLINE.setText("Clear (LINE)");
                    deleteLINE.setToolTipText("Remove a line of commands");
                    deleteLINE.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            deleteLINEActionPerformed(evt);
                        }
                    });
                    Actions.add(deleteLINE);

                    deleteALL.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_MASK));
                    deleteALL.setText("Clear (ALL)");
                    deleteALL.setToolTipText("Remove all lines of commands");
                    deleteALL.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            deleteALLActionPerformed(evt);
                        }
                    });
                    Actions.add(deleteALL);
                    Actions.add(jSeparator3);

                    undoAction.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
                    undoAction.setText("Undo");
                    undoAction.setToolTipText("Undo the previous activities");
                    undoAction.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            undoActionActionPerformed(evt);
                        }
                    });
                    Actions.add(undoAction);

                    redoAction.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
                    redoAction.setText("Redo");
                    redoAction.setToolTipText("Redo the recent activities");
                    redoAction.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            redoActionActionPerformed(evt);
                        }
                    });
                    Actions.add(redoAction);

                    jMenuBar1.add(Actions);

                    Help.setText("Help");

                    About.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
                    About.setText("About");
                    About.setToolTipText("");
                    About.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AboutActionPerformed(evt);
                        }
                    });
                    Help.add(About);

                    jMenuBar1.add(Help);

                    setJMenuBar(jMenuBar1);

                    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                    getContentPane().setLayout(layout);
                    layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(SELECTION, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(REDO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(UNDO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ClearAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ClearLine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(713, 713, 713)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(Coordinates)
                                .addComponent(jLabel30))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    );
                    layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel12)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(ClearLine, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(ClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(43, 43, 43)
                                    .addComponent(UNDO, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(REDO, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(161, 161, 161)
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(SELECTION, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel30)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Coordinates)
                                    .addGap(0, 21, Short.MAX_VALUE))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addContainerGap())
                    );

                    pack();
                }// </editor-fold>//GEN-END:initComponents
// ============================================================================
    /**
    * Exit Button Event Handler
    */
    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        if( changedNotify )
        {
            Object[] options = {"Yes", "No", "Cancel"};
            int choice = JOptionPane.showOptionDialog(this, 
                            "Do you want to save the changes before exit?", "Exit? ...",
                            JOptionPane.YES_NO_CANCEL_OPTION, 
                            JOptionPane.INFORMATION_MESSAGE, null, options, options[2]);

            if( choice == JOptionPane.YES_OPTION )
                Save.doClick();       
            else if( choice == JOptionPane.CANCEL_OPTION )
                return;
        }
        System.out.println("INFO: The GRPL Tool is successfully closed ...");
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed
// ============================================================================    
    /**
    * CHECK Command Event Handler
    */    
    private void CHECKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CHECKActionPerformed
        cmdIcon = (ImageIcon)CHECK.getIcon();
        cmdName = "CHECK";
        cmdType = "CHECK";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_CHECKActionPerformed
// ============================================================================
    /**
    * Workspace[0][6] Event Handler
    */    
    private void btn06ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn06ActionPerformed
        x=0; y=6;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        //if( !selectPointer ){
        //if( !selectPointer && WorkspaceEnable[x][y] ){
        //if( (!selectPointer && WorkspaceEnable[x][y]) || cmdType.compareTo("STOP")==0 ){
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn06ActionPerformed
// ============================================================================
    /**
    * Workspace[2][6] Event Handler
    */    
    private void btn26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn26ActionPerformed
        x=2; y=6;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn26ActionPerformed
// ============================================================================
    /**
    * Workspace[3][6] Event Handler
    */    
    private void btn36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn36ActionPerformed
        x=3; y=6;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn36ActionPerformed
// ============================================================================
    /**
    * Workspace[4][6] Event Handler
    */    
    private void btn46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn46ActionPerformed
        x=4; y=6;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn46ActionPerformed
// ============================================================================
    /**
    * Workspace[5][6] Event Handler
    */    
    private void btn56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn56ActionPerformed
        x=5; y=6;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn56ActionPerformed
// ============================================================================
    /**
    * Workspace[1][6] Event Handler
    */    
    private void btn16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn16ActionPerformed
        x=1; y=6;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn16ActionPerformed
// ============================================================================
    /**
    * Workspace[6][6] Event Handler
    */    
    private void btn66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn66ActionPerformed
        x=y=6;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn66ActionPerformed
// ============================================================================
    /**
    * Workspace[7][6] Event Handler
    */    
    private void btn76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn76ActionPerformed
        x=7; y=6;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn76ActionPerformed
// ============================================================================
    /**
    * Workspace[8][6] Event Handler
    */    
    private void btn86ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn86ActionPerformed
        x=8; y=6;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn86ActionPerformed
// ============================================================================
    /**
    * CALL Command Event Handler
    */    
    private void CALLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CALLActionPerformed
        cmdIcon = (ImageIcon)CALL.getIcon();
        cmdName = "CALL";//"RUN";
        cmdType = "CALL";//"RUN";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_CALLActionPerformed
// ============================================================================
    /**
    * STOP Command Event Handler
    */    
    private void STOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_STOPActionPerformed
        cmdIcon = (ImageIcon)STOP.getIcon();
        cmdName = "STOP";
        cmdType = "STOP";
        selectPointer=true;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_STOPActionPerformed
// ============================================================================
    /**
    * LOAD Command Event Handler
    */    
    private void LOADActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOADActionPerformed
        cmdIcon = (ImageIcon)LOAD.getIcon();
        cmdName = "LOAD";
        cmdType = "LOAD";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_LOADActionPerformed
// ============================================================================
    /**
    * LOOP Command Event Handler
    */    
    private void LOOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOOPActionPerformed
        cmdIcon = (ImageIcon)LOOP.getIcon();
        cmdName = "LOOP";
        cmdType = "LOOP";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_LOOPActionPerformed
// ============================================================================
    /**
    * BREAK Command Event Handler
    */    
    private void BREAKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BREAKActionPerformed
        cmdIcon = (ImageIcon)BREAK.getIcon();
        cmdName = "BREAK";
        cmdType = "BREAK";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_BREAKActionPerformed
// ============================================================================
    /**
    * CONTINUE Command Event Handler
    */    
    private void CONTINUEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CONTINUEActionPerformed
        cmdIcon = (ImageIcon)CONTINUE.getIcon();
        cmdName = "CONTINUE";
        cmdType = "CONTINUE";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_CONTINUEActionPerformed
// ============================================================================
    /**
    * FALSE Command Event Handler
    */    
    private void FALSEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FALSEActionPerformed
        cmdIcon = (ImageIcon)FALSE.getIcon();
        cmdName = "FALSE";
        cmdType = "FALSE";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_FALSEActionPerformed
// ============================================================================
    /**
    * TRUE Command Event Handler
    */    
    private void TRUEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TRUEActionPerformed
        cmdIcon = (ImageIcon)TRUE.getIcon();
        cmdName = "TRUE";
        cmdType = "TRUE";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_TRUEActionPerformed
// ============================================================================
    /**
    * PICK Command Event Handler
    */    
    private void PICKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PICKActionPerformed
        cmdIcon = (ImageIcon)PICK.getIcon();
        cmdName = "PICK";
        cmdType = "PICK";//"ACTUATOR";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_PICKActionPerformed
// ============================================================================
    /**
    * DROP Command Event Handler
    */    
    private void DROPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DROPActionPerformed
        cmdIcon = (ImageIcon)DROP.getIcon();
        cmdName = "DROP";
        cmdType = "DROP";//"ACTUATOR";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_DROPActionPerformed
// ============================================================================
    /**
    * TOUCH Command Event Handler
    */    
    private void TOUCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TOUCHActionPerformed
        cmdIcon = (ImageIcon)TOUCH.getIcon();
        cmdName = "TOUCH";
        cmdType = "TOUCH";//"SENSOR";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_TOUCHActionPerformed
// ============================================================================
    /**
    * SEE Command Event Handler
    */    
    private void SEEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEEActionPerformed
        cmdIcon = (ImageIcon)SEE.getIcon();
        cmdName = "SEE";
        cmdType = "SEE";//"SENSOR";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_SEEActionPerformed
// ============================================================================
    /**
    * FORWARD Command Event Handler
    */
    private void FORWARDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FORWARDActionPerformed
        cmdIcon = (ImageIcon)FORWARD.getIcon();
        cmdName = "FORWARD";
        cmdType = "FORWARD";//"DIRECTION";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_FORWARDActionPerformed
// ============================================================================
    /**
    * BACKWARD Command Event Handler
    */
    private void BACKWARDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BACKWARDActionPerformed
        cmdIcon = (ImageIcon)BACKWARD.getIcon();
        cmdName = "BACKWARD";
        cmdType = "BACKWARD";//"DIRECTION";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_BACKWARDActionPerformed
// ============================================================================
    /**
    * LEFT Command Event Handler
    */
    private void LEFTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LEFTActionPerformed
        cmdIcon = (ImageIcon)LEFT.getIcon();
        cmdName = "LEFT";
        cmdType = "LEFT";//"DIRECTION";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_LEFTActionPerformed
// ============================================================================
    /**
    * RIGHT Command Event Handler
    */
    private void RIGHTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RIGHTActionPerformed
        cmdIcon = (ImageIcon)RIGHT.getIcon();
        cmdName = "RIGHT";
        cmdType = "RIGHT";//"DIRECTION";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_RIGHTActionPerformed
// ============================================================================
    /**
    * BLACK Command Event Handler
    */
    private void BLACKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BLACKActionPerformed
        cmdIcon = (ImageIcon)BLACK.getIcon();
        cmdName = "BLACK";
        cmdType = "COLOR";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_BLACKActionPerformed
// ============================================================================
    /**
    * WHITE Command Event Handler
    */
    private void WHITEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WHITEActionPerformed
        cmdIcon = (ImageIcon)WHITE.getIcon();
        cmdName = "WHITE";
        cmdType = "COLOR";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_WHITEActionPerformed
// ============================================================================
    /**
    * GREEN Command Event Handler
    */
    private void GREENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GREENActionPerformed
        cmdIcon = (ImageIcon)GREEN.getIcon();
        cmdName = "GREEN";
        cmdType = "COLOR";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_GREENActionPerformed
// ============================================================================
    /**
    * BLUE Command Event Handler
    */
    private void BLUEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BLUEActionPerformed
        cmdIcon = (ImageIcon)BLUE.getIcon();
        cmdName = "BLUE";
        cmdType = "COLOR";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_BLUEActionPerformed
// ============================================================================
    /**
    * YELLOW Command Event Handler
    */
    private void YELLOWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YELLOWActionPerformed
        cmdIcon = (ImageIcon)YELLOW.getIcon();
        cmdName = "YELLOW";
        cmdType = "COLOR";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_YELLOWActionPerformed
// ============================================================================
    /**
    * RED Command Event Handler
    */
    private void REDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_REDActionPerformed
        cmdIcon = (ImageIcon)RED.getIcon();
        cmdName = "RED";
        cmdType = "COLOR";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_REDActionPerformed
// ============================================================================
    /**
    * INFINITY Command Event Handler
    */
    private void INFINITYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INFINITYActionPerformed
        cmdIcon = (ImageIcon)INFINITY.getIcon();
        cmdName = "INFINITY";
        cmdType = "NUMBER";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_INFINITYActionPerformed
// ============================================================================
    /**
    * NUMBERS Command Event Handler
    */
    private void COMPOSEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COMPOSEActionPerformed
        // Ones, Tens, Hundreds
        int ones, tens, hundreds, number;
        ones = (Byte)Ones.getValue();
        tens = (Byte)Tens.getValue();
        hundreds = (Byte)Hundreds.getValue();
        number  = (hundreds*100) + (tens*10) + (ones);
        cmdName = String.valueOf(number);
        cmdType = "NUMBER";
        cmdIcon = null;
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText(cmdName);
    }//GEN-LAST:event_COMPOSEActionPerformed
// ============================================================================
    /**
    * Workspace[0][0] Event Handler
    */
    private void btn00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn00ActionPerformed
        x=y=0;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }        
    }//GEN-LAST:event_btn00ActionPerformed
// ============================================================================
    /**
    * Workspace[0][1] Event Handler
    */
    private void btn01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn01ActionPerformed
        x=0; y=1;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn01ActionPerformed
// ============================================================================
    /**
    * Workspace[0][2] Event Handler
    */
    private void btn02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn02ActionPerformed
        x=0; y=2;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn02ActionPerformed
// ============================================================================
    /**
    * Workspace[0][3] Event Handler
    */
    private void btn03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn03ActionPerformed
        x=0; y=3;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn03ActionPerformed
// ============================================================================
    /**
    * Workspace[0][4] Event Handler
    */
    private void btn04ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn04ActionPerformed
        x=0; y=4;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn04ActionPerformed
// ============================================================================
    /**
    * Workspace[0][5] Event Handler
    */
    private void btn05ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn05ActionPerformed
        x=0; y=5;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn05ActionPerformed
// ============================================================================
    /**
    * Workspace[1][0] Event Handler
    */
    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ActionPerformed
        x=1; y=0;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn10ActionPerformed
// ============================================================================
    /**
    * Workspace[1][1] Event Handler
    */
    private void btn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn11ActionPerformed
        x=y=1;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn11ActionPerformed
// ============================================================================
    /**
    * Workspace[1][2] Event Handler
    */
    private void btn12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn12ActionPerformed
        x=1; y=2;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn12ActionPerformed
// ============================================================================
    /**
    * Workspace[1][3] Event Handler
    */
    private void btn13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn13ActionPerformed
        x=1; y=3;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn13ActionPerformed
// ============================================================================
    /**
    * Workspace[1][4] Event Handler
    */
    private void btn14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn14ActionPerformed
        x=1; y=4;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn14ActionPerformed
// ============================================================================
    /**
    * Workspace[1][5] Event Handler
    */
    private void btn15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn15ActionPerformed
        x=1; y=5;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn15ActionPerformed
// ============================================================================
    /**
    * Workspace[2][0] Event Handler
    */
    private void btn20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn20ActionPerformed
        x=2; y=0;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn20ActionPerformed
// ============================================================================
    /**
    * Workspace[2][1] Event Handler
    */
    private void btn21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn21ActionPerformed
        x=2; y=1;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn21ActionPerformed
// ============================================================================
    /**
    * Workspace[2][2] Event Handler
    */
    private void btn22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn22ActionPerformed
        x=y=2;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn22ActionPerformed
// ============================================================================
    /**
    * Workspace[2][3] Event Handler
    */
    private void btn23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn23ActionPerformed
        x=2; y=3;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn23ActionPerformed
// ============================================================================
    /**
    * Workspace[2][4] Event Handler
    */
    private void btn24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn24ActionPerformed
        x=2; y=4;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn24ActionPerformed
// ============================================================================
    /**
    * Workspace[2][5] Event Handler
    */
    private void btn25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn25ActionPerformed
        x=2; y=5;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn25ActionPerformed
// ============================================================================
    /**
    * Workspace[3][0] Event Handler
    */
    private void btn30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn30ActionPerformed
        x=3; y=0;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn30ActionPerformed
// ============================================================================
    /**
    * Workspace[3][1] Event Handler
    */
    private void btn31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn31ActionPerformed
        x=3; y=1;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn31ActionPerformed
// ============================================================================
    /**
    * Workspace[3][2] Event Handler
    */
    private void btn32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn32ActionPerformed
        x=3; y=2;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn32ActionPerformed
// ============================================================================
    /**
    * Workspace[3][3] Event Handler
    */
    private void btn33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn33ActionPerformed
        x=y=3;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn33ActionPerformed
// ============================================================================
    /**
    * Workspace[3][4] Event Handler
    */
    private void btn34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn34ActionPerformed
        x=3; y=4;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn34ActionPerformed
// ============================================================================
    /**
    * Workspace[3][5] Event Handler
    */
    private void btn35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn35ActionPerformed
        x=3; y=5;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn35ActionPerformed
// ============================================================================
    /**
    * Workspace[4][0] Event Handler
    */
    private void btn40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn40ActionPerformed
        x=4; y=0;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn40ActionPerformed
// ============================================================================
    /**
    * Workspace[4][1] Event Handler
    */
    private void btn41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn41ActionPerformed
        x=4; y=1;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn41ActionPerformed
// ============================================================================
    /**
    * Workspace[4][2] Event Handler
    */
    private void btn42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn42ActionPerformed
        x=4; y=2;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn42ActionPerformed
// ============================================================================
    /**
    * Workspace[4][3] Event Handler
    */
    private void btn43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn43ActionPerformed
        x=4; y=3;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn43ActionPerformed
// ============================================================================
    /**
    * Workspace[4][4] Event Handler
    */
    private void btn44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn44ActionPerformed
        x=y=4;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn44ActionPerformed
// ============================================================================
    /**
    * Workspace[4][5] Event Handler
    */
    private void btn45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn45ActionPerformed
        x=4; y=5;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn45ActionPerformed
// ============================================================================
    /**
    * Workspace[5][0] Event Handler
    */
    private void btn50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn50ActionPerformed
        x=5; y=0;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn50ActionPerformed
// ============================================================================
    /**
    * Workspace[5][1] Event Handler
    */
    private void btn51ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn51ActionPerformed
        x=5; y=1;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn51ActionPerformed
// ============================================================================
    /**
    * Workspace[5][2] Event Handler
    */
    private void btn52ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn52ActionPerformed
        x=5; y=2;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn52ActionPerformed
// ============================================================================
    /**
    * Workspace[5][3] Event Handler
    */
    private void btn53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn53ActionPerformed
        x=5; y=3;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn53ActionPerformed
// ============================================================================
    /**
    * Workspace[5][4] Event Handler
    */
    private void btn54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn54ActionPerformed
        x=5; y=4;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn54ActionPerformed
// ============================================================================
    /**
    * Workspace[5][5] Event Handler
    */
    private void btn55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn55ActionPerformed
        x=y=5;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn55ActionPerformed
// ============================================================================
    /**
    * Workspace[6][0] Event Handler
    */
    private void btn60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn60ActionPerformed
        x=6; y=0;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn60ActionPerformed
// ============================================================================
    /**
    * Workspace[6][1] Event Handler
    */
    private void btn61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn61ActionPerformed
        x=6; y=1;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn61ActionPerformed
// ============================================================================
    /**
    * Workspace[6][2] Event Handler
    */
    private void btn62ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn62ActionPerformed
        x=6; y=2;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn62ActionPerformed
// ============================================================================
    /**
    * Workspace[6][3] Event Handler
    */
    private void btn63ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn63ActionPerformed
        x=6; y=3;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn63ActionPerformed
// ============================================================================
    /**
    * Workspace[6][4] Event Handler
    */
    private void btn64ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn64ActionPerformed
        x=6; y=4;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn64ActionPerformed
// ============================================================================
    /**
    * Workspace[6][5] Event Handler
    */
    private void btn65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn65ActionPerformed
        x=6; y=5;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn65ActionPerformed
// ============================================================================
    /**
    * Workspace[7][0] Event Handler
    */
    private void btn70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn70ActionPerformed
        x=7; y=0;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn70ActionPerformed
// ============================================================================
    /**
    * Workspace[7][1] Event Handler
    */
    private void btn71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn71ActionPerformed
        x=7; y=1;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn71ActionPerformed
// ============================================================================
    /**
    * Workspace[7][2] Event Handler
    */
    private void btn72ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn72ActionPerformed
        x=7; y=2;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn72ActionPerformed
// ============================================================================
    /**
    * Workspace[7][3] Event Handler
    */
    private void btn73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn73ActionPerformed
        x=7; y=3;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn73ActionPerformed
// ============================================================================
    /**
    * Workspace[7][4] Event Handler
    */
    private void btn74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn74ActionPerformed
        x=7; y=4;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn74ActionPerformed
// ============================================================================
    /**
    * Workspace[7][5] Event Handler
    */
    private void btn75ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn75ActionPerformed
        x=7; y=5;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn75ActionPerformed
// ============================================================================
    /**
    * Workspace[8][0] Event Handler
    */
    private void btn80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn80ActionPerformed
        x=8; y=0;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn80ActionPerformed
// ============================================================================
    /**
    * Workspace[8][1] Event Handler
    */
    private void btn81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn81ActionPerformed
        x=8; y=1;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn81ActionPerformed
// ============================================================================
    /**
    * Workspace[8][2] Event Handler
    */
    private void btn82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn82ActionPerformed
        x=8; y=2;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn82ActionPerformed
// ============================================================================
    /**
    * Workspace[8][3] Event Handler
    */
    private void btn83ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn83ActionPerformed
        x=8; y=3;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn83ActionPerformed
// ============================================================================
    /**
    * Workspace[8][4] Event Handler
    */
    private void btn84ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn84ActionPerformed
        x=8; y=4;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn84ActionPerformed
// ============================================================================
    /**
    * Workspace[8][5] Event Handler
    */
    private void btn85ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn85ActionPerformed
        x=8; y=5;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn85ActionPerformed
// ============================================================================
    /**
    * Workspace[9][0] Event Handler
    */
    private void btn90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn90ActionPerformed
        x=9; y=0;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn90ActionPerformed
// ============================================================================
    /**
    * Workspace[9][1] Event Handler
    */
    private void btn91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn91ActionPerformed
        x=9; y=1;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn91ActionPerformed
// ============================================================================
    /**
    * Workspace[9][2] Event Handler
    */
    private void btn92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn92ActionPerformed
        x=9; y=2;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn92ActionPerformed
// ============================================================================
    /**
    * Workspace[9][3] Event Handler
    */
    private void btn93ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn93ActionPerformed
        x=9; y=3;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn93ActionPerformed
// ============================================================================
    /**
    * Workspace[9][4] Event Handler
    */
    private void btn94ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn94ActionPerformed
        x=9; y=4;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn94ActionPerformed
// ============================================================================
    /**
    * Workspace[9][5] Event Handler
    */
    private void btn95ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn95ActionPerformed
        x=9; y=5;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn95ActionPerformed
// ============================================================================
    /**
    * Workspace[9][6] Event Handler
    */
    private void btn96ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn96ActionPerformed
        x=9; y=6;
        Coordinates.setText("Row: "+x+" , Col: "+y);
        if( (!selectPointer && WorkspaceEnable[x][y]) || (cmdName.compareTo("STOP")==0 && !WorkspaceEnable[x][y]) ){
            parseCmd();
        }
    }//GEN-LAST:event_btn96ActionPerformed
// ============================================================================
    /**
    * DELETE (ONE) Action Event Handler
    */
    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        if( WorkspaceEnable[x][y])
        {
            // Checking if the deleted is LOOP, CHECK, or FUNCTION:
            if( parser.getType(x, y).compareTo("LOOP") ==0 || 
                parser.getType(x, y).compareTo("CHECK")==0 ||
               (parser.getType(x, y).compareTo("FUNCTION")==0 && y == 0)   )
                {
                    for(int row=x+1 ; row<10 ; row++)
                    {
                        if( !WorkspaceEnable[row][y] )
                        {
                            Workspace[row][y].setIcon( (Icon)emptyIcon );
                            Workspace[row][y].setText("");
                            WorkspaceEnable[row][y] = true;
                            parser.setData("", "", emptyIcon, row, y);                            
                        }
                    }
                    ClearLine.doClick();
                }
            // Checking if the deleted is an argument of the LOOP or CHECK:
            for( int i=0 ; i<y ; i++)
            {
                if( parser.getType(x, i).compareTo("LOOP") ==0 || 
                    parser.getType(x, i).compareTo("CHECK")==0 )
                        Workspace[x][y].setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED,
                                        Color.YELLOW, Color.YELLOW, Color.YELLOW, Color.YELLOW));
            }
            
            Workspace[x][y].setIcon( (Icon)emptyIcon );
            Workspace[x][y].setText("");
            parser.setData("", "", emptyIcon, x, y);
            
            cmdIcon = null;//emptyIcon;
            cmdName = "";
            cmdType = "";
            selectPointer = true;
            SELECTION.setIcon( SELECT.getIcon() );
            SELECTION.setText("");
            
            addToHistory();
        }
    }//GEN-LAST:event_DeleteActionPerformed
// ============================================================================
    /**
    * DELETE (LINE) Action Event Handler
    */
    private void ClearLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearLineActionPerformed
        for( int col=0 ; col<7 ; col++)
        {
            if( WorkspaceEnable[x][col])
            {
                if( parser.getType(x, col).compareTo("LOOP") ==0 || 
                    parser.getType(x, col).compareTo("CHECK")==0 ||
                   (parser.getType(x, col).compareTo("FUNCTION")==0 && col == 0)   )
                    {
                        for(int row=x+1 ; row<10 ; row++)
                        {
                            if( !WorkspaceEnable[row][col] )
                            {
                                Workspace[row][col].setIcon( (Icon)emptyIcon );
                                Workspace[row][col].setText("");
                                WorkspaceEnable[row][col] = true;
                                parser.setData("", "", emptyIcon, row, col);
                            }
                        }
                    }
                
                Workspace[x][col].setIcon( (Icon)emptyIcon );
                Workspace[x][col].setText("");
                parser.setData("", "", emptyIcon, x, col);                
            }
            Workspace[x][col].setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED,
                                        null, null, null, null));
        }
        
        cmdIcon = null;//emptyIcon;
        cmdName = "";
        cmdType = "";
        selectPointer = true;
        SELECTION.setIcon( SELECT.getIcon() );
        SELECTION.setText("");
            
        addToHistory();
    }//GEN-LAST:event_ClearLineActionPerformed
// ============================================================================
    /**
    * DELETE (ALL) Action Event Handler
    */
    private void ClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearAllActionPerformed
        ClearAllLines();
    }//GEN-LAST:event_ClearAllActionPerformed
// ============================================================================
    /**
    * SELECT Command Event Handler
    */
    private void SELECTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SELECTActionPerformed
        cmdIcon = null;//emptyIcon;
        cmdName = "SELECT";
        cmdType = "SELECT";
        selectPointer = true;
        //SELECTION.setIcon( (ImageIcon)SELECT.getIcon() );
        SELECTION.setIcon( SELECT.getIcon() );
        SELECTION.setText("");
    }//GEN-LAST:event_SELECTActionPerformed
// ============================================================================
    /**
    * UNDO Action Event Handler
    */
    private void UNDOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UNDOActionPerformed
        // Do Undo both in the Workspace[][] and Commands[][] ...
        HistoryStack stack = parser.undo();
        for( int row=0 ; row<10 ; row++ ){
            for(int col=0 ; col<7 ; col++)
            {
                if( stack.getFromStack(row).getFromStructure(col).icon == null)
                {
                    Workspace[ stack.getFromStack(row).getFromStructure(col).posX ]
                             [ stack.getFromStack(row).getFromStructure(col).posY ]
                            .setIcon( null );
                    Workspace[ stack.getFromStack(row).getFromStructure(col).posX ]
                             [ stack.getFromStack(row).getFromStructure(col).posY ]
                            .setText( stack.getFromStack(row).getFromStructure(col).command );                                        
                }
                else
                {
                    Workspace[ stack.getFromStack(row).getFromStructure(col).posX ]
                             [ stack.getFromStack(row).getFromStructure(col).posY ]
                            .setText( "" );
                    Workspace[ stack.getFromStack(row).getFromStructure(col).posX ]
                             [ stack.getFromStack(row).getFromStructure(col).posY ]
                            .setIcon( (Icon)stack.getFromStack(row).getFromStructure(col).icon );
                }
                
                WorkspaceEnable[ stack.getFromStack(row).getFromStructure(col).posX ]
                               [ stack.getFromStack(row).getFromStructure(col).posY ]
                               = stack.getFromStack(row).getFromStructure(col).WE;
                Workspace[ stack.getFromStack(row).getFromStructure(col).posX ]
                         [ stack.getFromStack(row).getFromStructure(col).posY ]
                          .setBorder( stack.getFromStack(row).getFromStructure(col).border);
            }
        }
        REDO.setEnabled(true);
    }//GEN-LAST:event_UNDOActionPerformed
// ============================================================================
    /**
    * REDO Action Event Handler
    */
    private void REDOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_REDOActionPerformed
        // Do Redo both in the Workspace[][] and Commands[][] ...
        HistoryStack stack = parser.redo();
        for( int row=0 ; row<10 ; row++){
            for(int col=0 ; col<7 ; col++)
            {
                if( stack.getFromStack(row).getFromStructure(col).icon == null)
                {
                    Workspace[ stack.getFromStack(row).getFromStructure(col).posX ]
                             [ stack.getFromStack(row).getFromStructure(col).posY ]
                             .setIcon( null );
                    Workspace[ stack.getFromStack(row).getFromStructure(col).posX ]
                             [ stack.getFromStack(row).getFromStructure(col).posY ]
                             .setText( stack.getFromStack(row).getFromStructure(col).command );                    
                }
                else
                {
                    Workspace[ stack.getFromStack(row).getFromStructure(col).posX ]
                             [ stack.getFromStack(row).getFromStructure(col).posY ]
                             .setText( "" );                
                    Workspace[ stack.getFromStack(row).getFromStructure(col).posX ]
                             [ stack.getFromStack(row).getFromStructure(col).posY ]
                            .setIcon( (Icon)stack.getFromStack(row).getFromStructure(col).icon );
                }
                
                WorkspaceEnable[ stack.getFromStack(row).getFromStructure(col).posX ]
                               [ stack.getFromStack(row).getFromStructure(col).posY ]
                               = stack.getFromStack(row).getFromStructure(col).WE;
                Workspace[ stack.getFromStack(row).getFromStructure(col).posX ]
                         [ stack.getFromStack(row).getFromStructure(col).posY ]
                          .setBorder( stack.getFromStack(row).getFromStructure(col).border);
            }
        }
    }//GEN-LAST:event_REDOActionPerformed
// ============================================================================
    /**
    * A Command Event Handler
    */
    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        cmdIcon = (ImageIcon)A.getIcon();
        cmdName = "A";
        cmdType = "VARIABLE";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_AActionPerformed
// ============================================================================
    /**
    * B Command Event Handler
    */
    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        cmdIcon = (ImageIcon)B.getIcon();
        cmdName = "B";
        cmdType = "VARIABLE";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_BActionPerformed
// ============================================================================
    /**
    * C Command Event Handler
    */
    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        cmdIcon = (ImageIcon)C.getIcon();
        cmdName = "C";
        cmdType = "VARIABLE";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_CActionPerformed
// ============================================================================
    /**
    * D Command Event Handler
    */
    private void DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DActionPerformed
        cmdIcon = (ImageIcon)D.getIcon();
        cmdName = "D";
        cmdType = "VARIABLE";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_DActionPerformed
// ============================================================================
    /**
    * ADD Command Event Handler
    */
    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        cmdIcon = (ImageIcon)ADD.getIcon();
        cmdName = "+";
        cmdType = "+";//"MATH";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_ADDActionPerformed
// ============================================================================
    /**
    * SUBTRACT Command Event Handler
    */
    private void SUBTRACTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUBTRACTActionPerformed
        cmdIcon = (ImageIcon)SUBTRACT.getIcon();
        cmdName = "-";
        cmdType = "-";//"MATH";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_SUBTRACTActionPerformed
// ============================================================================
    /**
    * MULTIPLY Command Event Handler
    */
    private void MULTIPLYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MULTIPLYActionPerformed
        cmdIcon = (ImageIcon)MULTIPLY.getIcon();
        cmdName = "*";
        cmdType = "*";//"MATH";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_MULTIPLYActionPerformed
// ============================================================================
    /**
    * DIVIDE Command Event Handler
    */
    private void DIVIDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DIVIDEActionPerformed
        cmdIcon = (ImageIcon)DIVIDE.getIcon();
        cmdName = "/";
        cmdType = "/";//"MATH";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_DIVIDEActionPerformed
// ============================================================================
    /**
    * EQUAL Command Event Handler
    */
    private void EQUALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EQUALActionPerformed
        cmdIcon = (ImageIcon)EQUAL.getIcon();
        cmdName = "=";
        cmdType = "=";//"MATH";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_EQUALActionPerformed
// ============================================================================
    /**
    * NOT EQUAL Command Event Handler
    */
    private void NOTEQUALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NOTEQUALActionPerformed
        cmdIcon = (ImageIcon)NOTEQUAL.getIcon();
        cmdName = "!=";
        cmdType = "!=";//"MATH";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_NOTEQUALActionPerformed
// ============================================================================
    /**
    * GREATER THAN Command Event Handler
    */
    private void GTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GTActionPerformed
        cmdIcon = (ImageIcon)GT.getIcon();
        cmdName = ">";
        cmdType = ">";//"MATH";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_GTActionPerformed
// ============================================================================
    /**
    * GREATER THAN AND EQUAL Command Event Handler
    */
    private void GTEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GTEActionPerformed
        cmdIcon = (ImageIcon)GTE.getIcon();
        cmdName = ">=";
        cmdType = ">=";//"MATH";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_GTEActionPerformed
// ============================================================================
    /**
    * LESS THAN Command Event Handler
    */
    private void LTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LTActionPerformed
        cmdIcon = (ImageIcon)LT.getIcon();
        cmdName = "<";
        cmdType = "<";//"MATH";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_LTActionPerformed
// ============================================================================
    /**
    * LESS THAN AND EQUAL Command Event Handler
    */
    private void LTEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LTEActionPerformed
        cmdIcon = (ImageIcon)LTE.getIcon();
        cmdName = "<=";
        cmdType = "<=";//"MATH";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_LTEActionPerformed
// ============================================================================
    /**
    * MODULE1 Command Event Handler
    */
    private void MOD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MOD1ActionPerformed
        cmdIcon = (ImageIcon)MOD1.getIcon();
        cmdName = "MOD1";
        cmdType = "FUNCTION";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_MOD1ActionPerformed
// ============================================================================
    /**
    * MODULE2 Command Event Handler
    */
    private void MOD2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MOD2ActionPerformed
        cmdIcon = (ImageIcon)MOD2.getIcon();
        cmdName = "MOD2";
        cmdType = "FUNCTION";
        selectPointer=false;
        SELECTION.setIcon( (Icon)cmdIcon );
        SELECTION.setText("");
    }//GEN-LAST:event_MOD2ActionPerformed
// ============================================================================
    /**
    * SAVE ACTION Event Handler
    */
    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // Setting the filter for the file extension:
        javax.swing.filechooser.FileNameExtensionFilter filter = 
                new javax.swing.filechooser.FileNameExtensionFilter(
                "GRPL Tool files (*.grpl)", "grpl");
        saveFile.setFileFilter(filter);
        // Show the save dialog:
        int retvalue =  saveFile.showSaveDialog(this);        
        // When the 'save' button pressed:
        if( retvalue == JFileChooser.APPROVE_OPTION )
        {
            // Adding the ".grpl" extension and checking the existence of the file:
            String filename = saveFile.getSelectedFile().getAbsolutePath();            
            if( filename.length() < 6 || filename.charAt(filename.length()-5) != '.' )
                filename = filename + ".grpl";            
            //if( saveFile.getSelectedFile().exists() )
            if( new File(filename).exists() )
            {
                Object[] options = {"Yes", "No"};
                int choice = JOptionPane.showOptionDialog(this, 
                                "The Selected file is already exists,\n"
                                +"do you want to overwrite it?", "WARNING ...",
                                JOptionPane.YES_NO_OPTION, 
                                JOptionPane.WARNING_MESSAGE, null, options, options[1]);
                
                if( choice == JOptionPane.NO_OPTION )
                    return;
            }
            parser.doSave(filename);
            changedNotify = false;
        }
    }//GEN-LAST:event_SaveActionPerformed
// ============================================================================
    /**
    * LOAD ACTION Event Handler
    */
    private void LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadActionPerformed
        // Setting the filter for the file extension:
        javax.swing.filechooser.FileNameExtensionFilter filter = 
                new javax.swing.filechooser.FileNameExtensionFilter(
                "GRPL Tool files (*.grpl)", "grpl");
        openFile.setFileFilter(filter);
        // Show the open dialog:
        int retvalue =  openFile.showOpenDialog(this);        
        // When the 'open' button pressed:
        if( retvalue == JFileChooser.APPROVE_OPTION )
        {
            String filename = openFile.getSelectedFile().getAbsolutePath();
            // Checking the existence of the file:
            if( !openFile.getSelectedFile().exists() )
            {
                String str = "Can't open the file:\n"+filename+"\nThe file is either not found or corrupted ...";                
                ErrMsg.print(0,str,-1,-1);
                return;
            }
            doLoad(filename);
            //parser.doLoad(filename);
        }
    }//GEN-LAST:event_LoadActionPerformed
// ============================================================================
    /**
     * Export Event Handler
     */
    private void ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportActionPerformed
        // Setting the filter for the file extension:
        javax.swing.filechooser.FileNameExtensionFilter filter = 
                new javax.swing.filechooser.FileNameExtensionFilter(
                "RoboMind Script (*.irobo)", "irobo");
        exportFile.setFileFilter(filter);
        // Show the export dialog:
        int retvalue =  exportFile.showSaveDialog(this);        
        // When the 'export' button pressed:
        if( retvalue == JFileChooser.APPROVE_OPTION )
        {
            // Adding the ".irobo" extension and checking the existence of the file:
            String filename = exportFile.getSelectedFile().getAbsolutePath();            
            if( filename.length()< 7 || filename.charAt(filename.length()-6) != '.' )
                filename = filename + ".irobo";
            // 
            if( new File(filename).exists() )
            {
                Object[] options = {"Yes", "No"};
                int choice = JOptionPane.showOptionDialog(this, 
                                "The Selected file is already exists,\n"
                                +"do you want to overwrite it?", "WARNING ...",
                                JOptionPane.YES_NO_OPTION, 
                                JOptionPane.WARNING_MESSAGE, null, options, options[1]);
                
                if( choice == JOptionPane.NO_OPTION )
                    return;
            }
            parser.doExport(filename);
        }        
    }//GEN-LAST:event_ExportActionPerformed
// ============================================================================
    private void deleteONEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteONEActionPerformed
        Delete.doClick();
    }//GEN-LAST:event_deleteONEActionPerformed
// ============================================================================
    private void deleteLINEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteLINEActionPerformed
        ClearLine.doClick();
    }//GEN-LAST:event_deleteLINEActionPerformed
// ============================================================================
    private void deleteALLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteALLActionPerformed
        ClearAll.doClick();
    }//GEN-LAST:event_deleteALLActionPerformed
// ============================================================================
    private void undoActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoActionActionPerformed
        UNDO.doClick();
    }//GEN-LAST:event_undoActionActionPerformed
// ============================================================================
    private void redoActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoActionActionPerformed
        REDO.doClick();
    }//GEN-LAST:event_redoActionActionPerformed
// ============================================================================    
    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
        String BODY = "\n(Graphical-Based Robotics Programming Language)\n"+
                      "\nMSEE student:    Ali M. Al-Bayaty"+
                      "\nThesis advisor:  Christopher Martinez, Ph.D.\n"+
                      "\nMarch 2014"+
                      "\nVersion: 1.31";
        JOptionPane.showMessageDialog(this, BODY, "About", JOptionPane.INFORMATION_MESSAGE, 
                            new ImageIcon(getClass().getResource("ICONS/Logo/Logo1.jpg")));
    }//GEN-LAST:event_AboutActionPerformed
// ============================================================================
    /**
    * Clearing all the lines in the Workspace
    * @param NONE
    * @return NONE
    */    
    private void ClearAllLines()
    {        
        for( int i=0 ; i<10 ; i++){
            for( int j=0 ; j<7 ; j++){ 
                Workspace[i][j].setIcon( (Icon)emptyIcon );
                Workspace[i][j].setText("");
                WorkspaceEnable[i][j] = true;
                parser.setData("", "", emptyIcon, i, j);
                Workspace[i][j].setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED,
                                          null, null, null, null));
            }
        }        
        cmdIcon = null;//emptyIcon;
        cmdName = "";
        cmdType = "";
        selectPointer = true;
        SELECTION.setIcon( SELECT.getIcon() );
        SELECTION.setText("");
            
        addToHistory();
    }
// ============================================================================
    /**
    * Parsing the commands in the Workspace thru the Model
    * @param NONE
    * @return NONE
    */
    private void parseCmd()
    {
        int i,j;        
        // Fill the selected icon with the command' icon:
	Workspace[x][y].setIcon((Icon)cmdIcon);
        // Fill the selected icon with the command's name:    
        if( Character.isDigit(cmdName.charAt(0)) )
           Workspace[x][y].setText(cmdName);
        else                
           Workspace[x][y].setText("");
	// Parse the selected command with the Model:	
        parser.parseCmd(cmdName, cmdType, cmdIcon, x, y);
        	
        Workspace[x][y].setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED,
                                  null, null, null, null));
        
        // Retrieve the new/modified line from the parser:
        for( i=0 ; i<7 ; i++ ){
            if( WorkspaceEnable[x][i] )
            {
                Workspace[x][i].setIcon( (Icon)parser.getIcon(x,i) );

                if( parser.getIcon(x,i) == null )
                    Workspace[x][i].setText( parser.getCommand(x,i) );
                else
                    Workspace[x][i].setText("");                
            }
        }
        
        //Highlighting the next available parameter (OPTIONs and CONDITIONs):
        for( i=1 ; i<=parser.numOfParameters && parser.ERRORnumOfParameters!=-1 ; i++){
            if( y+i < 7 )
                Workspace[x][y+i].setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED,
                                        Color.YELLOW, Color.YELLOW, Color.YELLOW, Color.YELLOW));
        }
        //
        if(parser.ERRORnumOfParameters == -1)
            Workspace[x][y].setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED,
                                      Color.YELLOW, Color.YELLOW, Color.YELLOW, Color.YELLOW));
                
        // Indention for the following commands (LOOP, CHECK, MOD1, MOD2, and STOP)                
        for( i=0 ; i<7 ; i++ )
        {
            String TYPE = parser.getType(x,i);
            // First, search for the commands (LOOP, CHECK, MOD1, and MOD2):
            if( TYPE.compareTo("LOOP") == 0 || TYPE.compareTo("CHECK") == 0 ||
               (TYPE.compareTo("FUNCTION") == 0 && i==0) )
            {
                // Then, disable all the Workspace's icons below this column:                
                for( j=x+1 ; j<10 ; j++ )
                {
                    if( parser.getType(j, i).compareTo("") == 0 ){
                        WorkspaceEnable[j][i] = false;
                        Workspace[j][i].setIcon(disabledIcon);
                    }
                    else 
                        break;
                }                                
            }
            // Second, search for the command (STOP):
            else if( TYPE.compareTo("STOP") == 0 )
            {
                // Then, enable all the Workspace's icons below this column:
                for( j=x+1 ; j<10 ; j++ )
                {
                    if( parser.getType(j, i).compareTo("") == 0 ){
                        WorkspaceEnable[j][i] = true;
                        Workspace[j][i].setIcon(emptyIcon);
                    }
                    else
                        break;
                }
            }
            //Third, remove all the disabled icons, if LOOP, CHECK, FUNCTION are replaced:
            else if( WorkspaceEnable[x][i] )
            {
                // Then, enable all the Workspace's icons below this column:
                for( j=x+1 ; j<10 ; j++ )
                {
                    if( !WorkspaceEnable[j][i] ){
                        WorkspaceEnable[j][i] = true;
                        Workspace[j][i].setIcon(emptyIcon);
                    }
                    else
                        break;
                }
            }
        }
        
        // Enabling the components after the first entered command:
        UNDO.setEnabled(true);
        Delete.setEnabled(true);
        ClearLine.setEnabled(true);
        ClearAll.setEnabled(true);
        
        // Saving to history:
        addToHistory();        
        // For the Save and Exit indication:
        changedNotify = true;
    }
// ============================================================================
    // Saving the History (UNDO / REDO):
    private void addToHistory()
    {
        ImageIcon[][] icons = new ImageIcon[10][7];
        for( int i=0 ; i<10 ; i++){
            for( int j=0 ; j<7 ; j++ )
            {
                icons[i][j] = (ImageIcon)Workspace[i][j].getIcon();
                border[i][j]= Workspace[i][j].getBorder();
            }
        }
        parser.addToHistory(WorkspaceEnable, border, icons);
    }
// ============================================================================
    /**
    * Loading 'grpl' file to the Workspace
    * @param filename The loaded file name
    * @return NONE
    */
    private void doLoad(String filename)
    {
        try {
            Scanner s = new Scanner( new File(filename) );
            int row=0,col;
            String tmp;
            String[] fields;
            String[][] Buffer = new String[10][7];
            
            // Collecting the data from the file:
            while( s.hasNextLine() && row < 10 )
            {
                tmp = s.nextLine();
                tmp = tmp.trim();
                //System.out.println(tmp);
                // Skipping the comment and empty lines:
                if( tmp.length() < 1 || tmp.charAt(0) == '?' ) continue;
                
                fields = tmp.toUpperCase().split(";");
                
                for(col=0 ; col<7 ;col++)
                    Buffer[row][col] = fields[col].trim();
                                
                row++;
            }
            s.close();
            // Clear the Workspace ...
            ClearAllLines();    
            
            // Filling the Workspace, then parse each command from Buffer:
            for(x=0 ; x<10 ; x++){                
                for(y=0 ; y<7 ;y++)
                {
                    if( Buffer[x][y].length() < 1 ) // Skip when Buffer is empty
                        continue;
                    
                    else if( Buffer[x][y].compareTo("LOAD") == 0 )
                    {
                        //LOAD.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)LOAD.getIcon();
                        cmdName = "LOAD";
                        cmdType = "LOAD";
                    }
                    else if( Buffer[x][y].compareTo("CALL") == 0 )
                    {
                        //CALL.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)CALL.getIcon();
                        cmdName = "CALL";//"RUN";
                        cmdType = "CALL";//"RUN";                        
                    }
                    else if( Buffer[x][y].compareTo("STOP") == 0 )
                    {
                        //STOP.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)STOP.getIcon();
                        cmdName = "STOP";
                        cmdType = "STOP";
                    }
                    else if( Buffer[x][y].compareTo("MOD1") == 0 )
                    {
                        //MOD1.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)MOD1.getIcon();
                        cmdName = "MOD1";
                        cmdType = "FUNCTION";
                    }
                    else if( Buffer[x][y].compareTo("MOD2") == 0 )
                    {
                        //MOD2.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)MOD2.getIcon();
                        cmdName = "MOD2";
                        cmdType = "FUNCTION";
                    }
                    else if( Buffer[x][y].compareTo("CHECK") == 0 )
                    {
                        //CHECK.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)CHECK.getIcon();
                        cmdName = "CHECK";
                        cmdType = "CHECK";
                    }
                    else if( Buffer[x][y].compareTo("LOOP") == 0 )
                    {
                        //LOOP.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)LOOP.getIcon();
                        cmdName = "LOOP";
                        cmdType = "LOOP";
                    }
                    else if( Buffer[x][y].compareTo("BREAK") == 0 )
                    {
                        //BREAK.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)BREAK.getIcon();
                        cmdName = "BREAK";
                        cmdType = "BREAK";
                    }
                    else if( Buffer[x][y].compareTo("CONTINUE") == 0 )
                    {
                        //CONTINUE.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)CONTINUE.getIcon();
                        cmdName = "CONTINUE";
                        cmdType = "CONTINUE";
                    }
                    else if( Buffer[x][y].compareTo("FALSE") == 0 )
                    {
                        //FALSE.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)FALSE.getIcon();
                        cmdName = "FALSE";
                        cmdType = "FALSE";
                    }
                    else if( Buffer[x][y].compareTo("TRUE") == 0 )
                    {
                        //TRUE.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)TRUE.getIcon();
                        cmdName = "TRUE";
                        cmdType = "TRUE";
                    }
                    else if( Buffer[x][y].compareTo("PICK") == 0 )
                    {
                        //PICK.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)PICK.getIcon();
                        cmdName = "PICK";
                        cmdType = "PICK";//"ACTUATOR";
                    }
                    else if( Buffer[x][y].compareTo("DROP") == 0 )
                    {
                        //DROP.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)DROP.getIcon();
                        cmdName = "DROP";
                        cmdType = "DROP";//"ACTUATOR";
                    }
                    else if( Buffer[x][y].compareTo("TOUCH") == 0 )
                    {
                        //TOUCH.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)TOUCH.getIcon();
                        cmdName = "TOUCH";
                        cmdType = "TOUCH";//"SENSOR";
                    }
                    else if( Buffer[x][y].compareTo("SEE") == 0 )
                    {
                        //SEE.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)SEE.getIcon();
                        cmdName = "SEE";
                        cmdType = "SEE";//"SENSOR";
                    }
                    else if( Buffer[x][y].compareTo("FORWARD") == 0 )
                    {
                        //FORWARD.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)FORWARD.getIcon();
                        cmdName = "FORWARD";
                        cmdType = "FORWARD";//"DIRECTION";
                    }
                    else if( Buffer[x][y].compareTo("BACKWARD") == 0 )
                    {
                        //BACKWARD.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)BACKWARD.getIcon();
                        cmdName = "BACKWARD";
                        cmdType = "BACKWARD";//"DIRECTION";
                    }
                    else if( Buffer[x][y].compareTo("LEFT") == 0 )
                    {
                        //LEFT.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)LEFT.getIcon();
                        cmdName = "LEFT";
                        cmdType = "LEFT";//"DIRECTION";
                    }
                    else if( Buffer[x][y].compareTo("RIGHT") == 0 )
                    {
                        //RIGHT.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)RIGHT.getIcon();
                        cmdName = "RIGHT";
                        cmdType = "RIGHT";//"DIRECTION";
                    }
                    else if( Buffer[x][y].compareTo("A") == 0 )
                    {
                        //A.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)A.getIcon();
                        cmdName = "A";
                        cmdType = "VARIABLE";
                    }
                    else if( Buffer[x][y].compareTo("B") == 0 )
                    {
                        //B.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)B.getIcon();
                        cmdName = "B";
                        cmdType = "VARIABLE";
                    }
                    else if( Buffer[x][y].compareTo("C") == 0 )
                    {
                        //C.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)C.getIcon();
                        cmdName = "C";
                        cmdType = "VARIABLE";
                    }
                    else if( Buffer[x][y].compareTo("D") == 0 )
                    {
                        //D.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)D.getIcon();
                        cmdName = "D";
                        cmdType = "VARIABLE";
                    }
                    else if( Buffer[x][y].compareTo("+") == 0 )
                    {
                        //ADD.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)ADD.getIcon();
                        cmdName = "+";
                        cmdType = "+";//"MATH";
                    }
                    else if( Buffer[x][y].compareTo("-") == 0 )
                    {
                        //SUBTRACT.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)SUBTRACT.getIcon();
                        cmdName = "-";
                        cmdType = "-";//"MATH";
                    }
                    else if( Buffer[x][y].compareTo("*") == 0 )
                    {
                        //MULTIPLY.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)MULTIPLY.getIcon();
                        cmdName = "*";
                        cmdType = "*";//"MATH";
                    }
                    else if( Buffer[x][y].compareTo("/") == 0 )
                    {
                        //DIVIDE.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)DIVIDE.getIcon();
                        cmdName = "/";
                        cmdType = "/";//"MATH";
                    }
                    else if( Buffer[x][y].compareTo("=") == 0 )
                    {
                        //EQUAL.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)EQUAL.getIcon();
                        cmdName = "=";
                        cmdType = "=";//"MATH";
                    }
                    else if( Buffer[x][y].compareTo("!=") == 0 )
                    {
                        //NOTEQUAL.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)NOTEQUAL.getIcon();
                        cmdName = "!=";
                        cmdType = "!=";//"MATH";
                    }
                    else if( Buffer[x][y].compareTo(">") == 0 )
                    {
                        //GT.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)GT.getIcon();
                        cmdName = ">";
                        cmdType = ">";//"MATH";
                    }
                    else if( Buffer[x][y].compareTo(">=") == 0 )
                    {
                        //GTE.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)GTE.getIcon();
                        cmdName = ">=";
                        cmdType = ">=";//"MATH";
                    }
                    else if( Buffer[x][y].compareTo("<") == 0 )
                    {
                        //LT.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)LT.getIcon();
                        cmdName = "<";
                        cmdType = "<";//"MATH";
                    }
                    else if( Buffer[x][y].compareTo("<=") == 0 )
                    {
                        //LTE.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)LTE.getIcon();
                        cmdName = "<=";
                        cmdType = "<=";//"MATH";
                    }
                    else if( Buffer[x][y].compareTo("INFINITY") == 0 )
                    {
                        //INFINITY.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)INFINITY.getIcon();
                        cmdName = "INFINITY";
                        cmdType = "NUMBER";
                    }
                    else if( Character.isDigit( Buffer[x][y].charAt(0) ))
                    {
                        cmdIcon = null;
                        cmdName = Buffer[x][y];
                        cmdType = "NUMBER";
                        //selectPointer=false;
                        //Workspace[x][y].doClick();
                    }
                    else if( Buffer[x][y].compareTo("BLACK") == 0 )
                    {
                        //BLACK.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)BLACK.getIcon();
                        cmdName = "BLACK";
                        cmdType = "COLOR";
                    }
                    else if( Buffer[x][y].compareTo("WHITE") == 0 )
                    {
                        //WHITE.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)WHITE.getIcon();
                        cmdName = "WHITE";
                        cmdType = "COLOR";
                    }
                    else if( Buffer[x][y].compareTo("BLUE") == 0 )
                    {
                        //BLUE.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)BLUE.getIcon();
                        cmdName = "BLUE";
                        cmdType = "COLOR";
                    }
                    else if( Buffer[x][y].compareTo("GREEN") == 0 )
                    {
                        //GREEN.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)GREEN.getIcon();
                        cmdName = "GREEN";
                        cmdType = "COLOR";
                    }
                    else if( Buffer[x][y].compareTo("YELLOW") == 0 )
                    {
                        //YELLOW.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)YELLOW.getIcon();
                        cmdName = "YELLOW";
                        cmdType = "COLOR";
                    }
                    else if( Buffer[x][y].compareTo("RED") == 0 )
                    {
                        //RED.doClick();
                        //Workspace[x][y].doClick();
                        cmdIcon = (ImageIcon)RED.getIcon();
                        cmdName = "RED";
                        cmdType = "COLOR";
                    }
                    else{
                        cmdIcon = null;
                        cmdName = "UNKNOWN!!";
                        cmdType = "UNKNOWN!!"; 
                        //selectPointer=false;
                        //Workspace[x][y].doClick();
                    }                    
                    parseCmd();
                }
            }
            System.out.println("INFO: The file: "+filename+" is successfully loaded ...");
        } 
        catch (Exception e) {
            String str = "Can't open the file:\n"+filename+"\nThe file is either not found or corrupted ...";            
            ErrMsg.print(0,str,-1,-1);
        }
    }
// ============================================================================
    /**
     * The main() function of the GRPL Tool
     * @param args The command line arguments
     */
    public static void main(String args[]) {
        System.out.println("Please wait while the GRPL Tool is checking\n"+
                           "and loading the \"instructions.guide\" file ...");
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }        
// ============================================================================
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A;
    private javax.swing.JButton ADD;
    private javax.swing.JMenuItem About;
    private javax.swing.JMenu Actions;
    private javax.swing.JButton B;
    private javax.swing.JButton BACKWARD;
    private javax.swing.JButton BLACK;
    private javax.swing.JButton BLUE;
    private javax.swing.JButton BREAK;
    private javax.swing.JButton C;
    private javax.swing.JButton CALL;
    private javax.swing.JButton CHECK;
    private javax.swing.JButton COMPOSE;
    private javax.swing.JButton CONTINUE;
    private javax.swing.JButton ClearAll;
    private javax.swing.JButton ClearLine;
    private javax.swing.JLabel Coordinates;
    private javax.swing.JButton D;
    private javax.swing.JButton DIVIDE;
    private javax.swing.JButton DROP;
    private javax.swing.JButton Delete;
    private javax.swing.JButton EQUAL;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem Export;
    private javax.swing.JButton FALSE;
    private javax.swing.JButton FORWARD;
    private javax.swing.JMenu File;
    private javax.swing.JButton GREEN;
    private javax.swing.JButton GT;
    private javax.swing.JButton GTE;
    private javax.swing.JMenu Help;
    private javax.swing.JSpinner Hundreds;
    private javax.swing.JButton INFINITY;
    private javax.swing.JButton LEFT;
    private javax.swing.JButton LOAD;
    private javax.swing.JButton LOOP;
    private javax.swing.JButton LT;
    private javax.swing.JButton LTE;
    private javax.swing.JMenuItem Load;
    private javax.swing.JButton MOD1;
    private javax.swing.JButton MOD2;
    private javax.swing.JButton MULTIPLY;
    private javax.swing.JButton NOTEQUAL;
    private javax.swing.JSpinner Ones;
    private javax.swing.JButton PICK;
    private javax.swing.JButton RED;
    private javax.swing.JButton REDO;
    private javax.swing.JButton RIGHT;
    private javax.swing.JButton SEE;
    private javax.swing.JButton SELECT;
    private javax.swing.JButton SELECTION;
    private javax.swing.JButton STOP;
    private javax.swing.JButton SUBTRACT;
    private javax.swing.JMenuItem Save;
    private javax.swing.JButton TOUCH;
    private javax.swing.JButton TRUE;
    private javax.swing.JSpinner Tens;
    private javax.swing.JButton UNDO;
    private javax.swing.JButton WHITE;
    private javax.swing.JPanel WorkspacePanel;
    private javax.swing.JButton YELLOW;
    private javax.swing.JButton btn00;
    private javax.swing.JButton btn01;
    private javax.swing.JButton btn02;
    private javax.swing.JButton btn03;
    private javax.swing.JButton btn04;
    private javax.swing.JButton btn05;
    private javax.swing.JButton btn06;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn11;
    private javax.swing.JButton btn12;
    private javax.swing.JButton btn13;
    private javax.swing.JButton btn14;
    private javax.swing.JButton btn15;
    private javax.swing.JButton btn16;
    private javax.swing.JButton btn20;
    private javax.swing.JButton btn21;
    private javax.swing.JButton btn22;
    private javax.swing.JButton btn23;
    private javax.swing.JButton btn24;
    private javax.swing.JButton btn25;
    private javax.swing.JButton btn26;
    private javax.swing.JButton btn30;
    private javax.swing.JButton btn31;
    private javax.swing.JButton btn32;
    private javax.swing.JButton btn33;
    private javax.swing.JButton btn34;
    private javax.swing.JButton btn35;
    private javax.swing.JButton btn36;
    private javax.swing.JButton btn40;
    private javax.swing.JButton btn41;
    private javax.swing.JButton btn42;
    private javax.swing.JButton btn43;
    private javax.swing.JButton btn44;
    private javax.swing.JButton btn45;
    private javax.swing.JButton btn46;
    private javax.swing.JButton btn50;
    private javax.swing.JButton btn51;
    private javax.swing.JButton btn52;
    private javax.swing.JButton btn53;
    private javax.swing.JButton btn54;
    private javax.swing.JButton btn55;
    private javax.swing.JButton btn56;
    private javax.swing.JButton btn60;
    private javax.swing.JButton btn61;
    private javax.swing.JButton btn62;
    private javax.swing.JButton btn63;
    private javax.swing.JButton btn64;
    private javax.swing.JButton btn65;
    private javax.swing.JButton btn66;
    private javax.swing.JButton btn70;
    private javax.swing.JButton btn71;
    private javax.swing.JButton btn72;
    private javax.swing.JButton btn73;
    private javax.swing.JButton btn74;
    private javax.swing.JButton btn75;
    private javax.swing.JButton btn76;
    private javax.swing.JButton btn80;
    private javax.swing.JButton btn81;
    private javax.swing.JButton btn82;
    private javax.swing.JButton btn83;
    private javax.swing.JButton btn84;
    private javax.swing.JButton btn85;
    private javax.swing.JButton btn86;
    private javax.swing.JButton btn90;
    private javax.swing.JButton btn91;
    private javax.swing.JButton btn92;
    private javax.swing.JButton btn93;
    private javax.swing.JButton btn94;
    private javax.swing.JButton btn95;
    private javax.swing.JButton btn96;
    private javax.swing.JMenuItem deleteALL;
    private javax.swing.JMenuItem deleteLINE;
    private javax.swing.JMenuItem deleteONE;
    private javax.swing.JDialog exportDialog;
    private javax.swing.JFileChooser exportFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JDialog openDialog;
    private javax.swing.JFileChooser openFile;
    private javax.swing.JMenuItem redoAction;
    private javax.swing.JDialog saveDialog;
    private javax.swing.JFileChooser saveFile;
    private javax.swing.JMenuItem undoAction;
    // End of variables declaration//GEN-END:variables
// ============================================================================
    private JButton[][] Workspace;      // Array of Buttons  (Workspace)
    private boolean WorkspaceEnable[][];
    private ImageIcon cmdIcon, emptyIcon, disabledIcon;// Command's Icon
    private String cmdName, cmdType;    // Command's Name
    private boolean selectPointer=false;// Selected Workspace's Elements
    private boolean changedNotify=false;// Indication for the changing to save / exit
    private int x,y;                    // Indices of the selectPointer Workspace's Elements
    private CmdsParser parser;
    private ErrMsgClassifier ErrMsg;
    private Border border[][];
}
// ============================================================================
